//
// Copyright (c) 2020. Liero AB
//
// Permission is hereby granted, free of charge, to any person obtaining
// a copy of this software and associated documentation files (the "Software"),
// to deal in the Software without restriction, including without limitation
// the rights to use, copy, modify, merge, publish, distribute, sublicense,
// and/or sell copies of the Software, and to permit persons to whom the Software
// is furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
// OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
// IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
// CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
// TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE
// OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.21.9
// source: provider.proto

package provider

import (
	core "git.liero.se/opentelco/go-swpx/proto/go/core"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type NameResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *NameResponse) Reset() {
	*x = NameResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_provider_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NameResponse) ProtoMessage() {}

func (x *NameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_provider_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NameResponse.ProtoReflect.Descriptor instead.
func (*NameResponse) Descriptor() ([]byte, []int) {
	return file_provider_proto_rawDescGZIP(), []int{0}
}

func (x *NameResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type VersionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version string `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *VersionResponse) Reset() {
	*x = VersionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_provider_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VersionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VersionResponse) ProtoMessage() {}

func (x *VersionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_provider_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VersionResponse.ProtoReflect.Descriptor instead.
func (*VersionResponse) Descriptor() ([]byte, []int) {
	return file_provider_proto_rawDescGZIP(), []int{1}
}

func (x *VersionResponse) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

type ConfigTelnet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User                string `protobuf:"bytes,1,opt,name=User,proto3" json:"User,omitempty"`
	Password            string `protobuf:"bytes,2,opt,name=Password,proto3" json:"Password,omitempty"`
	Port                int32  `protobuf:"varint,3,opt,name=Port,proto3" json:"Port,omitempty"`
	ScreenLength        string `protobuf:"bytes,4,opt,name=ScreenLength,proto3" json:"ScreenLength,omitempty"`
	ScreenLengthCommand string `protobuf:"bytes,5,opt,name=ScreenLengthCommand,proto3" json:"ScreenLengthCommand,omitempty"`
	RegexPrompt         string `protobuf:"bytes,6,opt,name=RegexPrompt,proto3" json:"RegexPrompt,omitempty"`
	Errors              string `protobuf:"bytes,7,opt,name=Errors,proto3" json:"Errors,omitempty"`
	TTL                 uint64 `protobuf:"varint,8,opt,name=TTL,proto3" json:"TTL,omitempty"`
	ReadDeadLine        uint64 `protobuf:"varint,9,opt,name=ReadDeadLine,proto3" json:"ReadDeadLine,omitempty"`
	WriteDeadLine       uint64 `protobuf:"varint,10,opt,name=WriteDeadLine,proto3" json:"WriteDeadLine,omitempty"`
}

func (x *ConfigTelnet) Reset() {
	*x = ConfigTelnet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_provider_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigTelnet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigTelnet) ProtoMessage() {}

func (x *ConfigTelnet) ProtoReflect() protoreflect.Message {
	mi := &file_provider_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigTelnet.ProtoReflect.Descriptor instead.
func (*ConfigTelnet) Descriptor() ([]byte, []int) {
	return file_provider_proto_rawDescGZIP(), []int{2}
}

func (x *ConfigTelnet) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *ConfigTelnet) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *ConfigTelnet) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *ConfigTelnet) GetScreenLength() string {
	if x != nil {
		return x.ScreenLength
	}
	return ""
}

func (x *ConfigTelnet) GetScreenLengthCommand() string {
	if x != nil {
		return x.ScreenLengthCommand
	}
	return ""
}

func (x *ConfigTelnet) GetRegexPrompt() string {
	if x != nil {
		return x.RegexPrompt
	}
	return ""
}

func (x *ConfigTelnet) GetErrors() string {
	if x != nil {
		return x.Errors
	}
	return ""
}

func (x *ConfigTelnet) GetTTL() uint64 {
	if x != nil {
		return x.TTL
	}
	return 0
}

func (x *ConfigTelnet) GetReadDeadLine() uint64 {
	if x != nil {
		return x.ReadDeadLine
	}
	return 0
}

func (x *ConfigTelnet) GetWriteDeadLine() uint64 {
	if x != nil {
		return x.WriteDeadLine
	}
	return 0
}

type ConfigSSH struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User                string `protobuf:"bytes,1,opt,name=User,proto3" json:"User,omitempty"`
	Password            string `protobuf:"bytes,2,opt,name=Password,proto3" json:"Password,omitempty"`
	Port                int32  `protobuf:"varint,3,opt,name=Port,proto3" json:"Port,omitempty"`
	ScreenLength        string `protobuf:"bytes,4,opt,name=ScreenLength,proto3" json:"ScreenLength,omitempty"`
	ScreenLengthCommand string `protobuf:"bytes,5,opt,name=ScreenLengthCommand,proto3" json:"ScreenLengthCommand,omitempty"`
	RegexPrompt         string `protobuf:"bytes,6,opt,name=RegexPrompt,proto3" json:"RegexPrompt,omitempty"`
	Errors              string `protobuf:"bytes,7,opt,name=Errors,proto3" json:"Errors,omitempty"`
	TTL                 uint64 `protobuf:"varint,8,opt,name=TTL,proto3" json:"TTL,omitempty"`
	ReadDeadLine        uint64 `protobuf:"varint,9,opt,name=ReadDeadLine,proto3" json:"ReadDeadLine,omitempty"`
	WriteDeadLine       uint64 `protobuf:"varint,10,opt,name=WriteDeadLine,proto3" json:"WriteDeadLine,omitempty"`
	SSHKeyPath          string `protobuf:"bytes,11,opt,name=SSHKeyPath,proto3" json:"SSHKeyPath,omitempty"`
}

func (x *ConfigSSH) Reset() {
	*x = ConfigSSH{}
	if protoimpl.UnsafeEnabled {
		mi := &file_provider_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigSSH) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigSSH) ProtoMessage() {}

func (x *ConfigSSH) ProtoReflect() protoreflect.Message {
	mi := &file_provider_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigSSH.ProtoReflect.Descriptor instead.
func (*ConfigSSH) Descriptor() ([]byte, []int) {
	return file_provider_proto_rawDescGZIP(), []int{3}
}

func (x *ConfigSSH) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *ConfigSSH) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *ConfigSSH) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *ConfigSSH) GetScreenLength() string {
	if x != nil {
		return x.ScreenLength
	}
	return ""
}

func (x *ConfigSSH) GetScreenLengthCommand() string {
	if x != nil {
		return x.ScreenLengthCommand
	}
	return ""
}

func (x *ConfigSSH) GetRegexPrompt() string {
	if x != nil {
		return x.RegexPrompt
	}
	return ""
}

func (x *ConfigSSH) GetErrors() string {
	if x != nil {
		return x.Errors
	}
	return ""
}

func (x *ConfigSSH) GetTTL() uint64 {
	if x != nil {
		return x.TTL
	}
	return 0
}

func (x *ConfigSSH) GetReadDeadLine() uint64 {
	if x != nil {
		return x.ReadDeadLine
	}
	return 0
}

func (x *ConfigSSH) GetWriteDeadLine() uint64 {
	if x != nil {
		return x.WriteDeadLine
	}
	return 0
}

func (x *ConfigSSH) GetSSHKeyPath() string {
	if x != nil {
		return x.SSHKeyPath
	}
	return ""
}

type ConfigSNMP struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Community          string `protobuf:"bytes,1,opt,name=Community,proto3" json:"Community,omitempty"`
	Version            uint32 `protobuf:"varint,2,opt,name=Version,proto3" json:"Version,omitempty"`
	Port               uint32 `protobuf:"varint,3,opt,name=Port,proto3" json:"Port,omitempty"`
	Timeout            uint64 `protobuf:"varint,4,opt,name=Timeout,proto3" json:"Timeout,omitempty"`
	Retries            int32  `protobuf:"varint,5,opt,name=Retries,proto3" json:"Retries,omitempty"`
	MaxIterations      int32  `protobuf:"varint,6,opt,name=MaxIterations,proto3" json:"MaxIterations,omitempty"`
	MaxRepetitions     int32  `protobuf:"varint,7,opt,name=MaxRepetitions,proto3" json:"MaxRepetitions,omitempty"`
	NonRepeaters       int32  `protobuf:"varint,8,opt,name=NonRepeaters,proto3" json:"NonRepeaters,omitempty"`
	DynamicRepetitions bool   `protobuf:"varint,9,opt,name=DynamicRepetitions,proto3" json:"DynamicRepetitions,omitempty"`
}

func (x *ConfigSNMP) Reset() {
	*x = ConfigSNMP{}
	if protoimpl.UnsafeEnabled {
		mi := &file_provider_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigSNMP) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigSNMP) ProtoMessage() {}

func (x *ConfigSNMP) ProtoReflect() protoreflect.Message {
	mi := &file_provider_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigSNMP.ProtoReflect.Descriptor instead.
func (*ConfigSNMP) Descriptor() ([]byte, []int) {
	return file_provider_proto_rawDescGZIP(), []int{4}
}

func (x *ConfigSNMP) GetCommunity() string {
	if x != nil {
		return x.Community
	}
	return ""
}

func (x *ConfigSNMP) GetVersion() uint32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *ConfigSNMP) GetPort() uint32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *ConfigSNMP) GetTimeout() uint64 {
	if x != nil {
		return x.Timeout
	}
	return 0
}

func (x *ConfigSNMP) GetRetries() int32 {
	if x != nil {
		return x.Retries
	}
	return 0
}

func (x *ConfigSNMP) GetMaxIterations() int32 {
	if x != nil {
		return x.MaxIterations
	}
	return 0
}

func (x *ConfigSNMP) GetMaxRepetitions() int32 {
	if x != nil {
		return x.MaxRepetitions
	}
	return 0
}

func (x *ConfigSNMP) GetNonRepeaters() int32 {
	if x != nil {
		return x.NonRepeaters
	}
	return 0
}

func (x *ConfigSNMP) GetDynamicRepetitions() bool {
	if x != nil {
		return x.DynamicRepetitions
	}
	return false
}

type ConfigRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// time when the request will be thrown out
	// calculated from the time the request was received + Timeout
	Deadline *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=deadline,proto3" json:"deadline,omitempty"`
}

func (x *ConfigRequest) Reset() {
	*x = ConfigRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_provider_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigRequest) ProtoMessage() {}

func (x *ConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_provider_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigRequest.ProtoReflect.Descriptor instead.
func (*ConfigRequest) Descriptor() ([]byte, []int) {
	return file_provider_proto_rawDescGZIP(), []int{5}
}

func (x *ConfigRequest) GetDeadline() *timestamppb.Timestamp {
	if x != nil {
		return x.Deadline
	}
	return nil
}

type Configuration struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SNMP    *ConfigSNMP    `protobuf:"bytes,1,opt,name=SNMP,proto3" json:"SNMP,omitempty"`
	Telnet  *ConfigTelnet  `protobuf:"bytes,2,opt,name=Telnet,proto3" json:"Telnet,omitempty"`
	Ssh     *ConfigSSH     `protobuf:"bytes,3,opt,name=Ssh,proto3" json:"Ssh,omitempty"`
	Request *ConfigRequest `protobuf:"bytes,4,opt,name=request,proto3" json:"request,omitempty"`
}

func (x *Configuration) Reset() {
	*x = Configuration{}
	if protoimpl.UnsafeEnabled {
		mi := &file_provider_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Configuration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Configuration) ProtoMessage() {}

func (x *Configuration) ProtoReflect() protoreflect.Message {
	mi := &file_provider_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Configuration.ProtoReflect.Descriptor instead.
func (*Configuration) Descriptor() ([]byte, []int) {
	return file_provider_proto_rawDescGZIP(), []int{6}
}

func (x *Configuration) GetSNMP() *ConfigSNMP {
	if x != nil {
		return x.SNMP
	}
	return nil
}

func (x *Configuration) GetTelnet() *ConfigTelnet {
	if x != nil {
		return x.Telnet
	}
	return nil
}

func (x *Configuration) GetSsh() *ConfigSSH {
	if x != nil {
		return x.Ssh
	}
	return nil
}

func (x *Configuration) GetRequest() *ConfigRequest {
	if x != nil {
		return x.Request
	}
	return nil
}

type SetupConfiguration struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SetupConfiguration) Reset() {
	*x = SetupConfiguration{}
	if protoimpl.UnsafeEnabled {
		mi := &file_provider_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetupConfiguration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetupConfiguration) ProtoMessage() {}

func (x *SetupConfiguration) ProtoReflect() protoreflect.Message {
	mi := &file_provider_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetupConfiguration.ProtoReflect.Descriptor instead.
func (*SetupConfiguration) Descriptor() ([]byte, []int) {
	return file_provider_proto_rawDescGZIP(), []int{7}
}

type SetupResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SetupResponse) Reset() {
	*x = SetupResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_provider_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetupResponse) ProtoMessage() {}

func (x *SetupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_provider_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetupResponse.ProtoReflect.Descriptor instead.
func (*SetupResponse) Descriptor() ([]byte, []int) {
	return file_provider_proto_rawDescGZIP(), []int{8}
}

var File_provider_proto protoreflect.FileDescriptor

var file_provider_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x1a, 0x0a, 0x63, 0x6f, 0x72, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x22, 0x0a, 0x0c, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x2b, 0x0a, 0x0f, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0xbe, 0x02, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x54, 0x65, 0x6c, 0x6e, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x55, 0x73, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x55, 0x73, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x50, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x50, 0x6f, 0x72, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x53, 0x63,
	0x72, 0x65, 0x65, 0x6e, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x30,
	0x0a, 0x13, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x43, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x53, 0x63, 0x72,
	0x65, 0x65, 0x6e, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x12, 0x20, 0x0a, 0x0b, 0x52, 0x65, 0x67, 0x65, 0x78, 0x50, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x52, 0x65, 0x67, 0x65, 0x78, 0x50, 0x72, 0x6f, 0x6d,
	0x70, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x54, 0x54,
	0x4c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x54, 0x54, 0x4c, 0x12, 0x22, 0x0a, 0x0c,
	0x52, 0x65, 0x61, 0x64, 0x44, 0x65, 0x61, 0x64, 0x4c, 0x69, 0x6e, 0x65, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0c, 0x52, 0x65, 0x61, 0x64, 0x44, 0x65, 0x61, 0x64, 0x4c, 0x69, 0x6e, 0x65,
	0x12, 0x24, 0x0a, 0x0d, 0x57, 0x72, 0x69, 0x74, 0x65, 0x44, 0x65, 0x61, 0x64, 0x4c, 0x69, 0x6e,
	0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x57, 0x72, 0x69, 0x74, 0x65, 0x44, 0x65,
	0x61, 0x64, 0x4c, 0x69, 0x6e, 0x65, 0x22, 0xdb, 0x02, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x53, 0x53, 0x48, 0x12, 0x12, 0x0a, 0x04, 0x55, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x55, 0x73, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x50, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x50, 0x6f, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x53, 0x63, 0x72, 0x65,
	0x65, 0x6e, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x30, 0x0a, 0x13,
	0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x43, 0x6f, 0x6d, 0x6d,
	0x61, 0x6e, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x53, 0x63, 0x72, 0x65, 0x65,
	0x6e, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x20,
	0x0a, 0x0b, 0x52, 0x65, 0x67, 0x65, 0x78, 0x50, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x52, 0x65, 0x67, 0x65, 0x78, 0x50, 0x72, 0x6f, 0x6d, 0x70, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x54, 0x54, 0x4c, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x54, 0x54, 0x4c, 0x12, 0x22, 0x0a, 0x0c, 0x52, 0x65,
	0x61, 0x64, 0x44, 0x65, 0x61, 0x64, 0x4c, 0x69, 0x6e, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0c, 0x52, 0x65, 0x61, 0x64, 0x44, 0x65, 0x61, 0x64, 0x4c, 0x69, 0x6e, 0x65, 0x12, 0x24,
	0x0a, 0x0d, 0x57, 0x72, 0x69, 0x74, 0x65, 0x44, 0x65, 0x61, 0x64, 0x4c, 0x69, 0x6e, 0x65, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x57, 0x72, 0x69, 0x74, 0x65, 0x44, 0x65, 0x61, 0x64,
	0x4c, 0x69, 0x6e, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x53, 0x48, 0x4b, 0x65, 0x79, 0x50, 0x61,
	0x74, 0x68, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x53, 0x53, 0x48, 0x4b, 0x65, 0x79,
	0x50, 0x61, 0x74, 0x68, 0x22, 0xae, 0x02, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53,
	0x4e, 0x4d, 0x50, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74,
	0x79, 0x12, 0x18, 0x0a, 0x07, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x07, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x50,
	0x6f, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x50, 0x6f, 0x72, 0x74, 0x12,
	0x18, 0x0a, 0x07, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x07, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x52, 0x65, 0x74,
	0x72, 0x69, 0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x52, 0x65, 0x74, 0x72,
	0x69, 0x65, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x4d, 0x61, 0x78, 0x49, 0x74, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x4d, 0x61, 0x78, 0x49,
	0x74, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x4d, 0x61, 0x78,
	0x52, 0x65, 0x70, 0x65, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0e, 0x4d, 0x61, 0x78, 0x52, 0x65, 0x70, 0x65, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x12, 0x22, 0x0a, 0x0c, 0x4e, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x72,
	0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x4e, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x65,
	0x61, 0x74, 0x65, 0x72, 0x73, 0x12, 0x2e, 0x0a, 0x12, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63,
	0x52, 0x65, 0x70, 0x65, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x12, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x52, 0x65, 0x70, 0x65, 0x74, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x47, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x36, 0x0a, 0x08, 0x64, 0x65, 0x61, 0x64, 0x6c, 0x69,
	0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x08, 0x64, 0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x22, 0xc3,
	0x01, 0x0a, 0x0d, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x28, 0x0a, 0x04, 0x53, 0x4e, 0x4d, 0x50, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x53, 0x4e, 0x4d, 0x50, 0x52, 0x04, 0x53, 0x4e, 0x4d, 0x50, 0x12, 0x2e, 0x0a, 0x06, 0x54, 0x65,
	0x6c, 0x6e, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x54, 0x65, 0x6c, 0x6e,
	0x65, 0x74, 0x52, 0x06, 0x54, 0x65, 0x6c, 0x6e, 0x65, 0x74, 0x12, 0x25, 0x0a, 0x03, 0x53, 0x73,
	0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x53, 0x48, 0x52, 0x03, 0x53, 0x73,
	0x68, 0x12, 0x31, 0x0a, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x07, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x22, 0x14, 0x0a, 0x12, 0x53, 0x65, 0x74, 0x75, 0x70, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x0f, 0x0a, 0x0d, 0x53, 0x65,
	0x74, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0x9b, 0x02, 0x0a, 0x08,
	0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x3e, 0x0a, 0x05, 0x53, 0x65, 0x74, 0x75,
	0x70, 0x12, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x53, 0x65, 0x74,
	0x75, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a,
	0x17, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x53, 0x65, 0x74, 0x75, 0x70,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x3c, 0x0a, 0x07, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x1a, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a,
	0x0a, 0x0a, 0x50, 0x72, 0x65, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x12, 0x0d, 0x2e, 0x63,
	0x6f, 0x72, 0x65, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0d, 0x2e, 0x63, 0x6f,
	0x72, 0x65, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x0b, 0x50, 0x6f,
	0x73, 0x74, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x12, 0x0e, 0x2e, 0x63, 0x6f, 0x72, 0x65,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x1a, 0x0e, 0x2e, 0x63, 0x6f, 0x72, 0x65,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x32, 0x5a, 0x30, 0x67, 0x69, 0x74,
	0x2e, 0x6c, 0x69, 0x65, 0x72, 0x6f, 0x2e, 0x73, 0x65, 0x2f, 0x6f, 0x70, 0x65, 0x6e, 0x74, 0x65,
	0x6c, 0x63, 0x6f, 0x2f, 0x67, 0x6f, 0x2d, 0x73, 0x77, 0x70, 0x78, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2f, 0x67, 0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_provider_proto_rawDescOnce sync.Once
	file_provider_proto_rawDescData = file_provider_proto_rawDesc
)

func file_provider_proto_rawDescGZIP() []byte {
	file_provider_proto_rawDescOnce.Do(func() {
		file_provider_proto_rawDescData = protoimpl.X.CompressGZIP(file_provider_proto_rawDescData)
	})
	return file_provider_proto_rawDescData
}

var file_provider_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_provider_proto_goTypes = []interface{}{
	(*NameResponse)(nil),          // 0: provider.NameResponse
	(*VersionResponse)(nil),       // 1: provider.VersionResponse
	(*ConfigTelnet)(nil),          // 2: provider.configTelnet
	(*ConfigSSH)(nil),             // 3: provider.configSSH
	(*ConfigSNMP)(nil),            // 4: provider.configSNMP
	(*ConfigRequest)(nil),         // 5: provider.configRequest
	(*Configuration)(nil),         // 6: provider.Configuration
	(*SetupConfiguration)(nil),    // 7: provider.SetupConfiguration
	(*SetupResponse)(nil),         // 8: provider.SetupResponse
	(*timestamppb.Timestamp)(nil), // 9: google.protobuf.Timestamp
	(*emptypb.Empty)(nil),         // 10: google.protobuf.Empty
	(*core.Request)(nil),          // 11: core.Request
	(*core.Response)(nil),         // 12: core.Response
}
var file_provider_proto_depIdxs = []int32{
	9,  // 0: provider.configRequest.deadline:type_name -> google.protobuf.Timestamp
	4,  // 1: provider.Configuration.SNMP:type_name -> provider.configSNMP
	2,  // 2: provider.Configuration.Telnet:type_name -> provider.configTelnet
	3,  // 3: provider.Configuration.Ssh:type_name -> provider.configSSH
	5,  // 4: provider.Configuration.request:type_name -> provider.configRequest
	7,  // 5: provider.Provider.Setup:input_type -> provider.SetupConfiguration
	10, // 6: provider.Provider.Name:input_type -> google.protobuf.Empty
	10, // 7: provider.Provider.Version:input_type -> google.protobuf.Empty
	11, // 8: provider.Provider.PreHandler:input_type -> core.Request
	12, // 9: provider.Provider.PostHandler:input_type -> core.Response
	8,  // 10: provider.Provider.Setup:output_type -> provider.SetupResponse
	0,  // 11: provider.Provider.Name:output_type -> provider.NameResponse
	1,  // 12: provider.Provider.Version:output_type -> provider.VersionResponse
	11, // 13: provider.Provider.PreHandler:output_type -> core.Request
	12, // 14: provider.Provider.PostHandler:output_type -> core.Response
	10, // [10:15] is the sub-list for method output_type
	5,  // [5:10] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_provider_proto_init() }
func file_provider_proto_init() {
	if File_provider_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_provider_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NameResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_provider_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VersionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_provider_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigTelnet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_provider_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigSSH); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_provider_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigSNMP); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_provider_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_provider_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Configuration); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_provider_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetupConfiguration); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_provider_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetupResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_provider_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_provider_proto_goTypes,
		DependencyIndexes: file_provider_proto_depIdxs,
		MessageInfos:      file_provider_proto_msgTypes,
	}.Build()
	File_provider_proto = out.File
	file_provider_proto_rawDesc = nil
	file_provider_proto_goTypes = nil
	file_provider_proto_depIdxs = nil
}
