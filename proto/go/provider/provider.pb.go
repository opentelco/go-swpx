// Code generated by protoc-gen-go. DO NOT EDIT.
// source: git.liero.se/opentelco/go-swpx/proto/src/provider.proto

package provider

import (
	context "context"
	fmt "fmt"
	core "git.liero.se/opentelco/go-swpx/proto/go/core"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Empty struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Empty) Reset()         { *m = Empty{} }
func (m *Empty) String() string { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()    {}
func (*Empty) Descriptor() ([]byte, []int) {
	return fileDescriptor_bf502d2668e979cf, []int{0}
}

func (m *Empty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Empty.Unmarshal(m, b)
}
func (m *Empty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Empty.Marshal(b, m, deterministic)
}
func (m *Empty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Empty.Merge(m, src)
}
func (m *Empty) XXX_Size() int {
	return xxx_messageInfo_Empty.Size(m)
}
func (m *Empty) XXX_DiscardUnknown() {
	xxx_messageInfo_Empty.DiscardUnknown(m)
}

var xxx_messageInfo_Empty proto.InternalMessageInfo

type NameResponse struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NameResponse) Reset()         { *m = NameResponse{} }
func (m *NameResponse) String() string { return proto.CompactTextString(m) }
func (*NameResponse) ProtoMessage()    {}
func (*NameResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_bf502d2668e979cf, []int{1}
}

func (m *NameResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NameResponse.Unmarshal(m, b)
}
func (m *NameResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NameResponse.Marshal(b, m, deterministic)
}
func (m *NameResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NameResponse.Merge(m, src)
}
func (m *NameResponse) XXX_Size() int {
	return xxx_messageInfo_NameResponse.Size(m)
}
func (m *NameResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_NameResponse.DiscardUnknown(m)
}

var xxx_messageInfo_NameResponse proto.InternalMessageInfo

func (m *NameResponse) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type VersionResponse struct {
	Version              string   `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VersionResponse) Reset()         { *m = VersionResponse{} }
func (m *VersionResponse) String() string { return proto.CompactTextString(m) }
func (*VersionResponse) ProtoMessage()    {}
func (*VersionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_bf502d2668e979cf, []int{2}
}

func (m *VersionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VersionResponse.Unmarshal(m, b)
}
func (m *VersionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VersionResponse.Marshal(b, m, deterministic)
}
func (m *VersionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VersionResponse.Merge(m, src)
}
func (m *VersionResponse) XXX_Size() int {
	return xxx_messageInfo_VersionResponse.Size(m)
}
func (m *VersionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_VersionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_VersionResponse proto.InternalMessageInfo

func (m *VersionResponse) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

type ConfigTelnet struct {
	User                 string   `protobuf:"bytes,1,opt,name=User,proto3" json:"User,omitempty"`
	Password             string   `protobuf:"bytes,2,opt,name=Password,proto3" json:"Password,omitempty"`
	Port                 int32    `protobuf:"varint,3,opt,name=Port,proto3" json:"Port,omitempty"`
	ScreenLength         string   `protobuf:"bytes,4,opt,name=ScreenLength,proto3" json:"ScreenLength,omitempty"`
	ScreenLengthCommand  string   `protobuf:"bytes,5,opt,name=ScreenLengthCommand,proto3" json:"ScreenLengthCommand,omitempty"`
	RegexPrompt          string   `protobuf:"bytes,6,opt,name=RegexPrompt,proto3" json:"RegexPrompt,omitempty"`
	Errors               string   `protobuf:"bytes,7,opt,name=Errors,proto3" json:"Errors,omitempty"`
	TTL                  uint64   `protobuf:"varint,8,opt,name=TTL,proto3" json:"TTL,omitempty"`
	ReadDeadLine         uint64   `protobuf:"varint,9,opt,name=ReadDeadLine,proto3" json:"ReadDeadLine,omitempty"`
	WriteDeadLine        uint64   `protobuf:"varint,10,opt,name=WriteDeadLine,proto3" json:"WriteDeadLine,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConfigTelnet) Reset()         { *m = ConfigTelnet{} }
func (m *ConfigTelnet) String() string { return proto.CompactTextString(m) }
func (*ConfigTelnet) ProtoMessage()    {}
func (*ConfigTelnet) Descriptor() ([]byte, []int) {
	return fileDescriptor_bf502d2668e979cf, []int{3}
}

func (m *ConfigTelnet) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConfigTelnet.Unmarshal(m, b)
}
func (m *ConfigTelnet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConfigTelnet.Marshal(b, m, deterministic)
}
func (m *ConfigTelnet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConfigTelnet.Merge(m, src)
}
func (m *ConfigTelnet) XXX_Size() int {
	return xxx_messageInfo_ConfigTelnet.Size(m)
}
func (m *ConfigTelnet) XXX_DiscardUnknown() {
	xxx_messageInfo_ConfigTelnet.DiscardUnknown(m)
}

var xxx_messageInfo_ConfigTelnet proto.InternalMessageInfo

func (m *ConfigTelnet) GetUser() string {
	if m != nil {
		return m.User
	}
	return ""
}

func (m *ConfigTelnet) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *ConfigTelnet) GetPort() int32 {
	if m != nil {
		return m.Port
	}
	return 0
}

func (m *ConfigTelnet) GetScreenLength() string {
	if m != nil {
		return m.ScreenLength
	}
	return ""
}

func (m *ConfigTelnet) GetScreenLengthCommand() string {
	if m != nil {
		return m.ScreenLengthCommand
	}
	return ""
}

func (m *ConfigTelnet) GetRegexPrompt() string {
	if m != nil {
		return m.RegexPrompt
	}
	return ""
}

func (m *ConfigTelnet) GetErrors() string {
	if m != nil {
		return m.Errors
	}
	return ""
}

func (m *ConfigTelnet) GetTTL() uint64 {
	if m != nil {
		return m.TTL
	}
	return 0
}

func (m *ConfigTelnet) GetReadDeadLine() uint64 {
	if m != nil {
		return m.ReadDeadLine
	}
	return 0
}

func (m *ConfigTelnet) GetWriteDeadLine() uint64 {
	if m != nil {
		return m.WriteDeadLine
	}
	return 0
}

type ConfigSSH struct {
	User                 string   `protobuf:"bytes,1,opt,name=User,proto3" json:"User,omitempty"`
	Password             string   `protobuf:"bytes,2,opt,name=Password,proto3" json:"Password,omitempty"`
	Port                 int32    `protobuf:"varint,3,opt,name=Port,proto3" json:"Port,omitempty"`
	ScreenLength         string   `protobuf:"bytes,4,opt,name=ScreenLength,proto3" json:"ScreenLength,omitempty"`
	ScreenLengthCommand  string   `protobuf:"bytes,5,opt,name=ScreenLengthCommand,proto3" json:"ScreenLengthCommand,omitempty"`
	RegexPrompt          string   `protobuf:"bytes,6,opt,name=RegexPrompt,proto3" json:"RegexPrompt,omitempty"`
	Errors               string   `protobuf:"bytes,7,opt,name=Errors,proto3" json:"Errors,omitempty"`
	TTL                  uint64   `protobuf:"varint,8,opt,name=TTL,proto3" json:"TTL,omitempty"`
	ReadDeadLine         uint64   `protobuf:"varint,9,opt,name=ReadDeadLine,proto3" json:"ReadDeadLine,omitempty"`
	WriteDeadLine        uint64   `protobuf:"varint,10,opt,name=WriteDeadLine,proto3" json:"WriteDeadLine,omitempty"`
	SSHKeyPath           string   `protobuf:"bytes,11,opt,name=SSHKeyPath,proto3" json:"SSHKeyPath,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConfigSSH) Reset()         { *m = ConfigSSH{} }
func (m *ConfigSSH) String() string { return proto.CompactTextString(m) }
func (*ConfigSSH) ProtoMessage()    {}
func (*ConfigSSH) Descriptor() ([]byte, []int) {
	return fileDescriptor_bf502d2668e979cf, []int{4}
}

func (m *ConfigSSH) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConfigSSH.Unmarshal(m, b)
}
func (m *ConfigSSH) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConfigSSH.Marshal(b, m, deterministic)
}
func (m *ConfigSSH) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConfigSSH.Merge(m, src)
}
func (m *ConfigSSH) XXX_Size() int {
	return xxx_messageInfo_ConfigSSH.Size(m)
}
func (m *ConfigSSH) XXX_DiscardUnknown() {
	xxx_messageInfo_ConfigSSH.DiscardUnknown(m)
}

var xxx_messageInfo_ConfigSSH proto.InternalMessageInfo

func (m *ConfigSSH) GetUser() string {
	if m != nil {
		return m.User
	}
	return ""
}

func (m *ConfigSSH) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *ConfigSSH) GetPort() int32 {
	if m != nil {
		return m.Port
	}
	return 0
}

func (m *ConfigSSH) GetScreenLength() string {
	if m != nil {
		return m.ScreenLength
	}
	return ""
}

func (m *ConfigSSH) GetScreenLengthCommand() string {
	if m != nil {
		return m.ScreenLengthCommand
	}
	return ""
}

func (m *ConfigSSH) GetRegexPrompt() string {
	if m != nil {
		return m.RegexPrompt
	}
	return ""
}

func (m *ConfigSSH) GetErrors() string {
	if m != nil {
		return m.Errors
	}
	return ""
}

func (m *ConfigSSH) GetTTL() uint64 {
	if m != nil {
		return m.TTL
	}
	return 0
}

func (m *ConfigSSH) GetReadDeadLine() uint64 {
	if m != nil {
		return m.ReadDeadLine
	}
	return 0
}

func (m *ConfigSSH) GetWriteDeadLine() uint64 {
	if m != nil {
		return m.WriteDeadLine
	}
	return 0
}

func (m *ConfigSSH) GetSSHKeyPath() string {
	if m != nil {
		return m.SSHKeyPath
	}
	return ""
}

type ConfigSNMP struct {
	Community            string   `protobuf:"bytes,1,opt,name=Community,proto3" json:"Community,omitempty"`
	Version              uint32   `protobuf:"varint,2,opt,name=Version,proto3" json:"Version,omitempty"`
	Port                 uint32   `protobuf:"varint,3,opt,name=Port,proto3" json:"Port,omitempty"`
	Timeout              uint64   `protobuf:"varint,4,opt,name=Timeout,proto3" json:"Timeout,omitempty"`
	Retries              int32    `protobuf:"varint,5,opt,name=Retries,proto3" json:"Retries,omitempty"`
	MaxIterations        int32    `protobuf:"varint,6,opt,name=MaxIterations,proto3" json:"MaxIterations,omitempty"`
	MaxRepetitions       int32    `protobuf:"varint,7,opt,name=MaxRepetitions,proto3" json:"MaxRepetitions,omitempty"`
	NonRepeaters         int32    `protobuf:"varint,8,opt,name=NonRepeaters,proto3" json:"NonRepeaters,omitempty"`
	DynamicRepetitions   bool     `protobuf:"varint,9,opt,name=DynamicRepetitions,proto3" json:"DynamicRepetitions,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConfigSNMP) Reset()         { *m = ConfigSNMP{} }
func (m *ConfigSNMP) String() string { return proto.CompactTextString(m) }
func (*ConfigSNMP) ProtoMessage()    {}
func (*ConfigSNMP) Descriptor() ([]byte, []int) {
	return fileDescriptor_bf502d2668e979cf, []int{5}
}

func (m *ConfigSNMP) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConfigSNMP.Unmarshal(m, b)
}
func (m *ConfigSNMP) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConfigSNMP.Marshal(b, m, deterministic)
}
func (m *ConfigSNMP) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConfigSNMP.Merge(m, src)
}
func (m *ConfigSNMP) XXX_Size() int {
	return xxx_messageInfo_ConfigSNMP.Size(m)
}
func (m *ConfigSNMP) XXX_DiscardUnknown() {
	xxx_messageInfo_ConfigSNMP.DiscardUnknown(m)
}

var xxx_messageInfo_ConfigSNMP proto.InternalMessageInfo

func (m *ConfigSNMP) GetCommunity() string {
	if m != nil {
		return m.Community
	}
	return ""
}

func (m *ConfigSNMP) GetVersion() uint32 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *ConfigSNMP) GetPort() uint32 {
	if m != nil {
		return m.Port
	}
	return 0
}

func (m *ConfigSNMP) GetTimeout() uint64 {
	if m != nil {
		return m.Timeout
	}
	return 0
}

func (m *ConfigSNMP) GetRetries() int32 {
	if m != nil {
		return m.Retries
	}
	return 0
}

func (m *ConfigSNMP) GetMaxIterations() int32 {
	if m != nil {
		return m.MaxIterations
	}
	return 0
}

func (m *ConfigSNMP) GetMaxRepetitions() int32 {
	if m != nil {
		return m.MaxRepetitions
	}
	return 0
}

func (m *ConfigSNMP) GetNonRepeaters() int32 {
	if m != nil {
		return m.NonRepeaters
	}
	return 0
}

func (m *ConfigSNMP) GetDynamicRepetitions() bool {
	if m != nil {
		return m.DynamicRepetitions
	}
	return false
}

type Configuration struct {
	SNMP                 *ConfigSNMP   `protobuf:"bytes,1,opt,name=SNMP,proto3" json:"SNMP,omitempty"`
	Telnet               *ConfigTelnet `protobuf:"bytes,2,opt,name=Telnet,proto3" json:"Telnet,omitempty"`
	Ssh                  *ConfigSSH    `protobuf:"bytes,3,opt,name=Ssh,proto3" json:"Ssh,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *Configuration) Reset()         { *m = Configuration{} }
func (m *Configuration) String() string { return proto.CompactTextString(m) }
func (*Configuration) ProtoMessage()    {}
func (*Configuration) Descriptor() ([]byte, []int) {
	return fileDescriptor_bf502d2668e979cf, []int{6}
}

func (m *Configuration) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Configuration.Unmarshal(m, b)
}
func (m *Configuration) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Configuration.Marshal(b, m, deterministic)
}
func (m *Configuration) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Configuration.Merge(m, src)
}
func (m *Configuration) XXX_Size() int {
	return xxx_messageInfo_Configuration.Size(m)
}
func (m *Configuration) XXX_DiscardUnknown() {
	xxx_messageInfo_Configuration.DiscardUnknown(m)
}

var xxx_messageInfo_Configuration proto.InternalMessageInfo

func (m *Configuration) GetSNMP() *ConfigSNMP {
	if m != nil {
		return m.SNMP
	}
	return nil
}

func (m *Configuration) GetTelnet() *ConfigTelnet {
	if m != nil {
		return m.Telnet
	}
	return nil
}

func (m *Configuration) GetSsh() *ConfigSSH {
	if m != nil {
		return m.Ssh
	}
	return nil
}

func init() {
	proto.RegisterType((*Empty)(nil), "provider.Empty")
	proto.RegisterType((*NameResponse)(nil), "provider.NameResponse")
	proto.RegisterType((*VersionResponse)(nil), "provider.VersionResponse")
	proto.RegisterType((*ConfigTelnet)(nil), "provider.configTelnet")
	proto.RegisterType((*ConfigSSH)(nil), "provider.configSSH")
	proto.RegisterType((*ConfigSNMP)(nil), "provider.configSNMP")
	proto.RegisterType((*Configuration)(nil), "provider.Configuration")
}

func init() {
	proto.RegisterFile("git.liero.se/opentelco/go-swpx/proto/src/provider.proto", fileDescriptor_bf502d2668e979cf)
}

var fileDescriptor_bf502d2668e979cf = []byte{
	// 645 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0x95, 0xcf, 0x6e, 0xd3, 0x4a,
	0x14, 0xc6, 0x95, 0x34, 0x7f, 0x4f, 0x9a, 0xb6, 0x9a, 0x5e, 0xf5, 0xfa, 0x46, 0x57, 0x28, 0xb2,
	0x00, 0x45, 0xa0, 0x3a, 0x55, 0x10, 0x62, 0xc3, 0x8a, 0xb6, 0x22, 0x88, 0xb6, 0xb2, 0xc6, 0x01,
	0x24, 0x76, 0x43, 0x72, 0x48, 0x47, 0x8a, 0x67, 0xcc, 0xcc, 0xa4, 0x4d, 0x9e, 0x81, 0x0d, 0x4f,
	0xc2, 0x23, 0xf0, 0x22, 0xbc, 0x0c, 0x9a, 0xb1, 0x9d, 0xc4, 0x69, 0x17, 0xb0, 0x67, 0x77, 0xbe,
	0xef, 0x7c, 0x3e, 0x1e, 0xff, 0xe2, 0x1c, 0xc3, 0x8b, 0x29, 0x37, 0xc1, 0x8c, 0xa3, 0x92, 0x81,
	0xc6, 0xbe, 0x4c, 0x50, 0x18, 0x9c, 0x8d, 0x65, 0x7f, 0x2a, 0x8f, 0xf5, 0x6d, 0xb2, 0xe8, 0x27,
	0x4a, 0x1a, 0xd9, 0xd7, 0x6a, 0x6c, 0xab, 0x1b, 0x3e, 0x41, 0x15, 0x38, 0x8b, 0x34, 0x72, 0xdd,
	0x81, 0xb1, 0x54, 0x98, 0xba, 0x7e, 0x1d, 0xaa, 0xe7, 0x71, 0x62, 0x96, 0xbe, 0x0f, 0xbb, 0x57,
	0x2c, 0x46, 0x8a, 0x3a, 0x91, 0x42, 0x23, 0x21, 0x50, 0x11, 0x2c, 0x46, 0xaf, 0xd4, 0x2d, 0xf5,
	0x9a, 0xd4, 0xd5, 0xfe, 0x53, 0xd8, 0x7f, 0x8f, 0x4a, 0x73, 0x29, 0x56, 0x31, 0x0f, 0xea, 0x37,
	0xa9, 0x95, 0x25, 0x73, 0xe9, 0xff, 0x28, 0xc3, 0xee, 0x58, 0x8a, 0xcf, 0x7c, 0x3a, 0xc2, 0x99,
	0x40, 0x63, 0x27, 0xbe, 0xd3, 0xa8, 0xf2, 0x89, 0xb6, 0x26, 0x1d, 0x68, 0x84, 0x4c, 0xeb, 0x5b,
	0xa9, 0x26, 0x5e, 0xd9, 0xf9, 0x2b, 0x6d, 0xf3, 0xa1, 0x54, 0xc6, 0xdb, 0xe9, 0x96, 0x7a, 0x55,
	0xea, 0x6a, 0xe2, 0xc3, 0x6e, 0x34, 0x56, 0x88, 0xe2, 0x02, 0xc5, 0xd4, 0x5c, 0x7b, 0x15, 0x77,
	0x4d, 0xc1, 0x23, 0x27, 0x70, 0xb8, 0xa9, 0x4f, 0x65, 0x1c, 0x33, 0x31, 0xf1, 0xaa, 0x2e, 0x7a,
	0x5f, 0x8b, 0x74, 0xa1, 0x45, 0x71, 0x8a, 0x8b, 0x50, 0xc9, 0x38, 0x31, 0x5e, 0xcd, 0x25, 0x37,
	0x2d, 0x72, 0x04, 0xb5, 0x73, 0xa5, 0xa4, 0xd2, 0x5e, 0xdd, 0x35, 0x33, 0x45, 0x0e, 0x60, 0x67,
	0x34, 0xba, 0xf0, 0x1a, 0xdd, 0x52, 0xaf, 0x42, 0x6d, 0x69, 0x4f, 0x48, 0x91, 0x4d, 0xce, 0x90,
	0x4d, 0x2e, 0xb8, 0x40, 0xaf, 0xe9, 0x5a, 0x05, 0x8f, 0x3c, 0x84, 0xf6, 0x07, 0xc5, 0x0d, 0xae,
	0x42, 0xe0, 0x42, 0x45, 0xd3, 0xff, 0x59, 0x86, 0x66, 0x0a, 0x30, 0x8a, 0x86, 0x7f, 0xe9, 0xfd,
	0x19, 0x3d, 0xf2, 0x00, 0x20, 0x8a, 0x86, 0x6f, 0x71, 0x19, 0x32, 0x73, 0xed, 0xb5, 0xdc, 0x7d,
	0x37, 0x1c, 0xff, 0x7b, 0x19, 0x20, 0xa3, 0x7b, 0x75, 0x19, 0x92, 0xff, 0xa1, 0x69, 0x9f, 0x67,
	0x2e, 0xb8, 0x59, 0x66, 0x8c, 0xd7, 0x86, 0x7d, 0xcb, 0xb3, 0x17, 0xdf, 0x71, 0x6e, 0xd3, 0x5c,
	0x16, 0x30, 0xb7, 0x33, 0xcc, 0x1e, 0xd4, 0x47, 0x3c, 0x46, 0x39, 0x37, 0x8e, 0x70, 0x85, 0xe6,
	0xd2, 0x76, 0x28, 0x1a, 0xc5, 0x51, 0x3b, 0xa0, 0x55, 0x9a, 0x4b, 0xfb, 0x50, 0x97, 0x6c, 0xf1,
	0xc6, 0xa0, 0x62, 0x86, 0x4b, 0xa1, 0x1d, 0xc6, 0x2a, 0x2d, 0x9a, 0xe4, 0x31, 0xec, 0x5d, 0xb2,
	0x05, 0xc5, 0x04, 0x0d, 0x4f, 0x63, 0x75, 0x17, 0xdb, 0x72, 0x2d, 0xc6, 0x2b, 0xfb, 0x27, 0x4d,
	0x90, 0x19, 0x54, 0xda, 0x11, 0xae, 0xd2, 0x82, 0x47, 0x02, 0x20, 0x67, 0x4b, 0xc1, 0x62, 0x3e,
	0xde, 0x9c, 0x67, 0x81, 0x37, 0xe8, 0x3d, 0x1d, 0xff, 0x5b, 0x09, 0xda, 0xa7, 0x0e, 0xd8, 0x3c,
	0x3d, 0x0e, 0xe9, 0x41, 0xc5, 0xb2, 0x73, 0xb8, 0x5a, 0x83, 0x7f, 0x82, 0xd5, 0xc2, 0x59, 0x73,
	0xa5, 0x2e, 0x41, 0x02, 0xa8, 0xa5, 0x4b, 0xc0, 0xe1, 0x6b, 0x0d, 0x8e, 0xb6, 0xb3, 0x69, 0x97,
	0x66, 0x29, 0xf2, 0x08, 0x76, 0x22, 0x7d, 0xed, 0xa0, 0xb6, 0x06, 0x87, 0x77, 0x06, 0x47, 0x43,
	0x6a, 0xfb, 0x83, 0xaf, 0x65, 0x68, 0x84, 0x59, 0x8f, 0xf4, 0xa1, 0x62, 0x17, 0x18, 0xd9, 0x5f,
	0xc7, 0xdd, 0x66, 0xeb, 0x6c, 0xdc, 0xac, 0xb0, 0xe1, 0x9e, 0xaf, 0x7e, 0xd4, 0xbb, 0xd7, 0xfc,
	0xb7, 0x36, 0xb6, 0x37, 0xde, 0x13, 0x80, 0x50, 0xe1, 0x90, 0x89, 0xc9, 0x0c, 0x15, 0x69, 0x07,
	0x6e, 0x99, 0x52, 0xfc, 0x32, 0x47, 0x6d, 0x3a, 0x45, 0x49, 0x8e, 0xa1, 0x15, 0x4a, 0x6d, 0xf2,
	0xf0, 0x5e, 0xde, 0x4d, 0x47, 0x75, 0xb6, 0x34, 0x79, 0x09, 0x07, 0xaf, 0xd1, 0x14, 0x21, 0xdf,
	0x39, 0xda, 0xbf, 0x6b, 0xa3, 0x90, 0x7c, 0x35, 0xf8, 0x78, 0xf2, 0x5b, 0xdf, 0x86, 0xa9, 0x5c,
	0x7d, 0x1a, 0x3e, 0xd5, 0x9c, 0xf5, 0xec, 0x57, 0x00, 0x00, 0x00, 0xff, 0xff, 0x25, 0x1f, 0x52,
	0x08, 0x56, 0x06, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ProviderClient is the client API for Provider service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ProviderClient interface {
	Name(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*NameResponse, error)
	Version(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*VersionResponse, error)
	PreHandler(ctx context.Context, in *core.Request, opts ...grpc.CallOption) (*core.Request, error)
	PostHandler(ctx context.Context, in *core.Response, opts ...grpc.CallOption) (*core.Response, error)
	GetConfiguration(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Configuration, error)
}

type providerClient struct {
	cc grpc.ClientConnInterface
}

func NewProviderClient(cc grpc.ClientConnInterface) ProviderClient {
	return &providerClient{cc}
}

func (c *providerClient) Name(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*NameResponse, error) {
	out := new(NameResponse)
	err := c.cc.Invoke(ctx, "/provider.Provider/Name", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *providerClient) Version(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*VersionResponse, error) {
	out := new(VersionResponse)
	err := c.cc.Invoke(ctx, "/provider.Provider/Version", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *providerClient) PreHandler(ctx context.Context, in *core.Request, opts ...grpc.CallOption) (*core.Request, error) {
	out := new(core.Request)
	err := c.cc.Invoke(ctx, "/provider.Provider/PreHandler", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *providerClient) PostHandler(ctx context.Context, in *core.Response, opts ...grpc.CallOption) (*core.Response, error) {
	out := new(core.Response)
	err := c.cc.Invoke(ctx, "/provider.Provider/PostHandler", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *providerClient) GetConfiguration(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Configuration, error) {
	out := new(Configuration)
	err := c.cc.Invoke(ctx, "/provider.Provider/GetConfiguration", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ProviderServer is the server API for Provider service.
type ProviderServer interface {
	Name(context.Context, *Empty) (*NameResponse, error)
	Version(context.Context, *Empty) (*VersionResponse, error)
	PreHandler(context.Context, *core.Request) (*core.Request, error)
	PostHandler(context.Context, *core.Response) (*core.Response, error)
	GetConfiguration(context.Context, *Empty) (*Configuration, error)
}

// UnimplementedProviderServer can be embedded to have forward compatible implementations.
type UnimplementedProviderServer struct {
}

func (*UnimplementedProviderServer) Name(ctx context.Context, req *Empty) (*NameResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Name not implemented")
}
func (*UnimplementedProviderServer) Version(ctx context.Context, req *Empty) (*VersionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Version not implemented")
}
func (*UnimplementedProviderServer) PreHandler(ctx context.Context, req *core.Request) (*core.Request, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PreHandler not implemented")
}
func (*UnimplementedProviderServer) PostHandler(ctx context.Context, req *core.Response) (*core.Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostHandler not implemented")
}
func (*UnimplementedProviderServer) GetConfiguration(ctx context.Context, req *Empty) (*Configuration, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetConfiguration not implemented")
}

func RegisterProviderServer(s *grpc.Server, srv ProviderServer) {
	s.RegisterService(&_Provider_serviceDesc, srv)
}

func _Provider_Name_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProviderServer).Name(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/provider.Provider/Name",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProviderServer).Name(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Provider_Version_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProviderServer).Version(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/provider.Provider/Version",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProviderServer).Version(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Provider_PreHandler_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(core.Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProviderServer).PreHandler(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/provider.Provider/PreHandler",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProviderServer).PreHandler(ctx, req.(*core.Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _Provider_PostHandler_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(core.Response)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProviderServer).PostHandler(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/provider.Provider/PostHandler",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProviderServer).PostHandler(ctx, req.(*core.Response))
	}
	return interceptor(ctx, in, info, handler)
}

func _Provider_GetConfiguration_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProviderServer).GetConfiguration(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/provider.Provider/GetConfiguration",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProviderServer).GetConfiguration(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _Provider_serviceDesc = grpc.ServiceDesc{
	ServiceName: "provider.Provider",
	HandlerType: (*ProviderServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Name",
			Handler:    _Provider_Name_Handler,
		},
		{
			MethodName: "Version",
			Handler:    _Provider_Version_Handler,
		},
		{
			MethodName: "PreHandler",
			Handler:    _Provider_PreHandler_Handler,
		},
		{
			MethodName: "PostHandler",
			Handler:    _Provider_PostHandler_Handler,
		},
		{
			MethodName: "GetConfiguration",
			Handler:    _Provider_GetConfiguration_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "git.liero.se/opentelco/go-swpx/proto/src/provider.proto",
}
