// Code generated by protoc-gen-go. DO NOT EDIT.
// source: git.liero.se/opentelco/go-swpx/proto/src/core.proto

package core

import (
	context "context"
	fmt "fmt"
	networkelement "git.liero.se/opentelco/go-swpx/proto/go/networkelement"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Error struct {
	Message              string   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Code                 int32    `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Error) Reset()         { *m = Error{} }
func (m *Error) String() string { return proto.CompactTextString(m) }
func (*Error) ProtoMessage()    {}
func (*Error) Descriptor() ([]byte, []int) {
	return fileDescriptor_47606d63192e4934, []int{0}
}

func (m *Error) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Error.Unmarshal(m, b)
}
func (m *Error) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Error.Marshal(b, m, deterministic)
}
func (m *Error) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Error.Merge(m, src)
}
func (m *Error) XXX_Size() int {
	return xxx_messageInfo_Error.Size(m)
}
func (m *Error) XXX_DiscardUnknown() {
	xxx_messageInfo_Error.DiscardUnknown(m)
}

var xxx_messageInfo_Error proto.InternalMessageInfo

func (m *Error) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *Error) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

type Request struct {
	// Types that are valid to be assigned to Payload:
	//	*Request_TechnicalInformationRequest
	Payload              isRequest_Payload `protobuf_oneof:"payload"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Request) Reset()         { *m = Request{} }
func (m *Request) String() string { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()    {}
func (*Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_47606d63192e4934, []int{1}
}

func (m *Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Request.Unmarshal(m, b)
}
func (m *Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Request.Marshal(b, m, deterministic)
}
func (m *Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Request.Merge(m, src)
}
func (m *Request) XXX_Size() int {
	return xxx_messageInfo_Request.Size(m)
}
func (m *Request) XXX_DiscardUnknown() {
	xxx_messageInfo_Request.DiscardUnknown(m)
}

var xxx_messageInfo_Request proto.InternalMessageInfo

type isRequest_Payload interface {
	isRequest_Payload()
}

type Request_TechnicalInformationRequest struct {
	TechnicalInformationRequest *TechnicalInformationRequest `protobuf:"bytes,1,opt,name=technical_information_request,json=technicalInformationRequest,proto3,oneof"`
}

func (*Request_TechnicalInformationRequest) isRequest_Payload() {}

func (m *Request) GetPayload() isRequest_Payload {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (m *Request) GetTechnicalInformationRequest() *TechnicalInformationRequest {
	if x, ok := m.GetPayload().(*Request_TechnicalInformationRequest); ok {
		return x.TechnicalInformationRequest
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Request) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Request_TechnicalInformationRequest)(nil),
	}
}

type Response struct {
	// Types that are valid to be assigned to Payload:
	//	*Response_TechnicalInformationResponse
	Payload              isResponse_Payload `protobuf_oneof:"Payload"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_47606d63192e4934, []int{2}
}

func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (m *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(m, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

type isResponse_Payload interface {
	isResponse_Payload()
}

type Response_TechnicalInformationResponse struct {
	TechnicalInformationResponse *TechnicalInformationResponse `protobuf:"bytes,1,opt,name=technical_information_response,json=technicalInformationResponse,proto3,oneof"`
}

func (*Response_TechnicalInformationResponse) isResponse_Payload() {}

func (m *Response) GetPayload() isResponse_Payload {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (m *Response) GetTechnicalInformationResponse() *TechnicalInformationResponse {
	if x, ok := m.GetPayload().(*Response_TechnicalInformationResponse); ok {
		return x.TechnicalInformationResponse
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Response) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Response_TechnicalInformationResponse)(nil),
	}
}

type TechnicalInformationResponse struct {
	NetworkElement       *networkelement.Element `protobuf:"bytes,1,opt,name=network_element,json=networkElement,proto3" json:"network_element,omitempty"`
	PhysicalPort         string                  `protobuf:"bytes,2,opt,name=physical_port,json=physicalPort,proto3" json:"physical_port,omitempty"`
	Error                *Error                  `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
	RequestObjectID      string                  `protobuf:"bytes,4,opt,name=RequestObjectID,proto3" json:"RequestObjectID,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *TechnicalInformationResponse) Reset()         { *m = TechnicalInformationResponse{} }
func (m *TechnicalInformationResponse) String() string { return proto.CompactTextString(m) }
func (*TechnicalInformationResponse) ProtoMessage()    {}
func (*TechnicalInformationResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_47606d63192e4934, []int{3}
}

func (m *TechnicalInformationResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TechnicalInformationResponse.Unmarshal(m, b)
}
func (m *TechnicalInformationResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TechnicalInformationResponse.Marshal(b, m, deterministic)
}
func (m *TechnicalInformationResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TechnicalInformationResponse.Merge(m, src)
}
func (m *TechnicalInformationResponse) XXX_Size() int {
	return xxx_messageInfo_TechnicalInformationResponse.Size(m)
}
func (m *TechnicalInformationResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_TechnicalInformationResponse.DiscardUnknown(m)
}

var xxx_messageInfo_TechnicalInformationResponse proto.InternalMessageInfo

func (m *TechnicalInformationResponse) GetNetworkElement() *networkelement.Element {
	if m != nil {
		return m.NetworkElement
	}
	return nil
}

func (m *TechnicalInformationResponse) GetPhysicalPort() string {
	if m != nil {
		return m.PhysicalPort
	}
	return ""
}

func (m *TechnicalInformationResponse) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *TechnicalInformationResponse) GetRequestObjectID() string {
	if m != nil {
		return m.RequestObjectID
	}
	return ""
}

type TechnicalInformationRequest struct {
	Hostname             string   `protobuf:"bytes,1,opt,name=hostname,proto3" json:"hostname,omitempty"`
	Port                 string   `protobuf:"bytes,2,opt,name=port,proto3" json:"port,omitempty"`
	Provider             string   `protobuf:"bytes,3,opt,name=provider,proto3" json:"provider,omitempty"`
	Driver               string   `protobuf:"bytes,4,opt,name=driver,proto3" json:"driver,omitempty"`
	Region               string   `protobuf:"bytes,5,opt,name=region,proto3" json:"region,omitempty"`
	Timeout              int32    `protobuf:"varint,6,opt,name=timeout,proto3" json:"timeout,omitempty"`
	RecreateIndex        bool     `protobuf:"varint,7,opt,name=recreate_index,json=recreateIndex,proto3" json:"recreate_index,omitempty"`
	CacheTtl             int32    `protobuf:"varint,8,opt,name=cache_ttl,json=cacheTtl,proto3" json:"cache_ttl,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TechnicalInformationRequest) Reset()         { *m = TechnicalInformationRequest{} }
func (m *TechnicalInformationRequest) String() string { return proto.CompactTextString(m) }
func (*TechnicalInformationRequest) ProtoMessage()    {}
func (*TechnicalInformationRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_47606d63192e4934, []int{4}
}

func (m *TechnicalInformationRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TechnicalInformationRequest.Unmarshal(m, b)
}
func (m *TechnicalInformationRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TechnicalInformationRequest.Marshal(b, m, deterministic)
}
func (m *TechnicalInformationRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TechnicalInformationRequest.Merge(m, src)
}
func (m *TechnicalInformationRequest) XXX_Size() int {
	return xxx_messageInfo_TechnicalInformationRequest.Size(m)
}
func (m *TechnicalInformationRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TechnicalInformationRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TechnicalInformationRequest proto.InternalMessageInfo

func (m *TechnicalInformationRequest) GetHostname() string {
	if m != nil {
		return m.Hostname
	}
	return ""
}

func (m *TechnicalInformationRequest) GetPort() string {
	if m != nil {
		return m.Port
	}
	return ""
}

func (m *TechnicalInformationRequest) GetProvider() string {
	if m != nil {
		return m.Provider
	}
	return ""
}

func (m *TechnicalInformationRequest) GetDriver() string {
	if m != nil {
		return m.Driver
	}
	return ""
}

func (m *TechnicalInformationRequest) GetRegion() string {
	if m != nil {
		return m.Region
	}
	return ""
}

func (m *TechnicalInformationRequest) GetTimeout() int32 {
	if m != nil {
		return m.Timeout
	}
	return 0
}

func (m *TechnicalInformationRequest) GetRecreateIndex() bool {
	if m != nil {
		return m.RecreateIndex
	}
	return false
}

func (m *TechnicalInformationRequest) GetCacheTtl() int32 {
	if m != nil {
		return m.CacheTtl
	}
	return 0
}

func init() {
	proto.RegisterType((*Error)(nil), "core.Error")
	proto.RegisterType((*Request)(nil), "core.Request")
	proto.RegisterType((*Response)(nil), "core.Response")
	proto.RegisterType((*TechnicalInformationResponse)(nil), "core.TechnicalInformationResponse")
	proto.RegisterType((*TechnicalInformationRequest)(nil), "core.TechnicalInformationRequest")
}

func init() {
	proto.RegisterFile("git.liero.se/opentelco/go-swpx/proto/src/core.proto", fileDescriptor_47606d63192e4934)
}

var fileDescriptor_47606d63192e4934 = []byte{
	// 494 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x53, 0x4d, 0x6f, 0xd3, 0x40,
	0x10, 0xad, 0x21, 0x69, 0x92, 0x29, 0x49, 0xa5, 0x95, 0x00, 0x2b, 0x29, 0x28, 0x0d, 0x42, 0xca,
	0x01, 0x1c, 0xa9, 0x15, 0x37, 0x0e, 0x08, 0x5a, 0xd1, 0x9c, 0xa8, 0x56, 0x3d, 0x71, 0x89, 0x5c,
	0x67, 0x70, 0xb6, 0xd8, 0x3b, 0x66, 0x77, 0xfa, 0x75, 0xe0, 0xc0, 0x5f, 0xe4, 0xcf, 0x70, 0x45,
	0xde, 0x5d, 0x87, 0xaa, 0x52, 0x23, 0x4e, 0x9e, 0xf7, 0x66, 0xf4, 0xf4, 0xfc, 0x66, 0x16, 0x0e,
	0x73, 0xc5, 0x49, 0xa1, 0xd0, 0x50, 0x62, 0x71, 0x46, 0x15, 0x6a, 0xc6, 0x22, 0xa3, 0x59, 0x4e,
	0x6f, 0xed, 0x75, 0x75, 0x33, 0xab, 0x0c, 0x31, 0xcd, 0xac, 0xc9, 0x66, 0x19, 0x19, 0x4c, 0x1c,
	0x14, 0xad, 0xba, 0x1e, 0x3e, 0xd5, 0xc8, 0xd7, 0x64, 0xbe, 0x2f, 0xb0, 0xc0, 0x12, 0x35, 0xfb,
	0xe6, 0xe4, 0x1d, 0xb4, 0x8f, 0x8d, 0x21, 0x23, 0x62, 0xe8, 0x94, 0x68, 0x6d, 0x9a, 0x63, 0x1c,
	0x8d, 0xa3, 0x69, 0x4f, 0x36, 0x50, 0x08, 0x68, 0x65, 0xb4, 0xc4, 0xf8, 0xd1, 0x38, 0x9a, 0xb6,
	0xa5, 0xab, 0x27, 0x3f, 0xa1, 0x23, 0xf1, 0xc7, 0x25, 0x5a, 0x16, 0x39, 0xbc, 0x60, 0xcc, 0x56,
	0x5a, 0x65, 0x69, 0xb1, 0x50, 0xfa, 0x1b, 0x99, 0x32, 0x65, 0x45, 0x7a, 0x61, 0xfc, 0x80, 0x93,
	0xdb, 0x39, 0xd8, 0x4f, 0x9c, 0xa5, 0xb3, 0x66, 0x74, 0xfe, 0x6f, 0x32, 0x28, 0x9d, 0x6c, 0xc9,
	0x11, 0x3f, 0xdc, 0xfe, 0xd8, 0x83, 0x4e, 0x95, 0xde, 0x16, 0x94, 0x2e, 0x27, 0xbf, 0x22, 0xe8,
	0x4a, 0xb4, 0x15, 0x69, 0x8b, 0xe2, 0x02, 0x5e, 0x3e, 0x64, 0xc0, 0x4f, 0x04, 0x07, 0x93, 0x4d,
	0x0e, 0xfc, 0xe4, 0xc9, 0x96, 0xdc, 0xe3, 0x0d, 0xfd, 0xda, 0xc3, 0x69, 0xf0, 0xf0, 0x3b, 0x82,
	0xbd, 0x4d, 0x5a, 0xe2, 0x03, 0xec, 0xde, 0xcb, 0x3c, 0x18, 0x79, 0x9e, 0x04, 0xbe, 0x59, 0xc5,
	0xb1, 0xff, 0xca, 0x41, 0xe0, 0x03, 0x16, 0xaf, 0xa0, 0x5f, 0xad, 0x6e, 0xad, 0xfb, 0xb1, 0x8a,
	0x0c, 0xbb, 0x15, 0xf4, 0xe4, 0x93, 0x86, 0x3c, 0x25, 0xc3, 0x62, 0x1f, 0xda, 0x58, 0x6f, 0x30,
	0x7e, 0xec, 0xc4, 0x77, 0xfc, 0x5f, 0xba, 0xa5, 0x4a, 0xdf, 0x11, 0x53, 0xd8, 0x0d, 0x21, 0x7e,
	0x39, 0xbf, 0xc0, 0x8c, 0xe7, 0x47, 0x71, 0xcb, 0x29, 0xdd, 0xa7, 0x27, 0x7f, 0x22, 0x18, 0x6d,
	0x58, 0x91, 0x18, 0x42, 0x77, 0x45, 0x96, 0x75, 0x5a, 0x36, 0x67, 0xb2, 0xc6, 0xf5, 0x9d, 0xdc,
	0x31, 0xe9, 0xea, 0x7a, 0xbe, 0x32, 0x74, 0xa5, 0x96, 0xe8, 0xfd, 0xf5, 0xe4, 0x1a, 0x8b, 0x67,
	0xb0, 0xbd, 0x34, 0xea, 0x0a, 0x4d, 0x30, 0x13, 0x50, 0xcd, 0x1b, 0xcc, 0x15, 0xe9, 0xb8, 0xed,
	0x79, 0x8f, 0xea, 0x0b, 0x65, 0x55, 0x22, 0x5d, 0x72, 0xbc, 0xed, 0x4e, 0xb1, 0x81, 0xe2, 0x35,
	0x0c, 0x0c, 0x66, 0x06, 0x53, 0xc6, 0x85, 0xd2, 0x4b, 0xbc, 0x89, 0x3b, 0xe3, 0x68, 0xda, 0x95,
	0xfd, 0x86, 0x9d, 0xd7, 0xa4, 0x18, 0x41, 0x2f, 0x4b, 0xb3, 0x15, 0x2e, 0x98, 0x8b, 0xb8, 0xeb,
	0x24, 0xba, 0x8e, 0x38, 0xe3, 0xe2, 0xe0, 0x08, 0x5a, 0x9f, 0xc8, 0xa0, 0x78, 0x0f, 0xa3, 0xcf,
	0xc8, 0xeb, 0x0c, 0xea, 0x88, 0xef, 0xe4, 0x20, 0xfa, 0x3e, 0xde, 0x90, 0xc7, 0x70, 0xd0, 0xc0,
	0x70, 0x1f, 0xc9, 0xd7, 0x37, 0xff, 0xf5, 0x44, 0x73, 0x72, 0x2f, 0xf4, 0x7c, 0xdb, 0xc1, 0xc3,
	0xbf, 0x01, 0x00, 0x00, 0xff, 0xff, 0x9b, 0x52, 0x9a, 0x18, 0xd9, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// CoreClient is the client API for Core service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CoreClient interface {
	GetTechnicalPortInformation(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
}

type coreClient struct {
	cc grpc.ClientConnInterface
}

func NewCoreClient(cc grpc.ClientConnInterface) CoreClient {
	return &coreClient{cc}
}

func (c *coreClient) GetTechnicalPortInformation(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/core.Core/GetTechnicalPortInformation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CoreServer is the server API for Core service.
type CoreServer interface {
	GetTechnicalPortInformation(context.Context, *Request) (*Response, error)
}

// UnimplementedCoreServer can be embedded to have forward compatible implementations.
type UnimplementedCoreServer struct {
}

func (*UnimplementedCoreServer) GetTechnicalPortInformation(ctx context.Context, req *Request) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTechnicalPortInformation not implemented")
}

func RegisterCoreServer(s *grpc.Server, srv CoreServer) {
	s.RegisterService(&_Core_serviceDesc, srv)
}

func _Core_GetTechnicalPortInformation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CoreServer).GetTechnicalPortInformation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/core.Core/GetTechnicalPortInformation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CoreServer).GetTechnicalPortInformation(ctx, req.(*Request))
	}
	return interceptor(ctx, in, info, handler)
}

var _Core_serviceDesc = grpc.ServiceDesc{
	ServiceName: "core.Core",
	HandlerType: (*CoreServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetTechnicalPortInformation",
			Handler:    _Core_GetTechnicalPortInformation_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "git.liero.se/opentelco/go-swpx/proto/src/core.proto",
}
