/*
 * Copyright (c) 2020. Liero AB
 *
 * Permission is hereby granted, free of charge, to any person obtaining
 * a copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sublicense,
 * and/or sell copies of the Software, and to permit persons to whom the Software
 * is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
 * IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
 * CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
 * TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE
 * OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */

syntax = "proto3";

option go_package = "git.liero.se/opentelco/go-swpx/proto/go/fleet/templatepb";

import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";

package fleet.template;

service TemplateService {
    // Get a configuration template by its ID, returns the template if found otherwise returns ErrNotFound
    rpc GetByID(GetByIDParameters) returns (Template) {}

    // List lists all available templates in the database
    rpc List(ListParameters) returns (ListResponse) {}

    // create a new template in the database
    rpc Create(CreateParameters) returns (Template) {}

    // delete removes a template from the database, this will remove the template from the database
    // without any checks. Use the Fleet service to remove the device in a safe way
    rpc Delete(DeleteParameters) returns (google.protobuf.Empty) {}
}

message Template {
    // the id for the specific created template
    string id = 1;

    //  the name of the template e.g 'Huawei S5720 Access Template'
    string name = 2;

    // description of the template e.g  'The Huawei S5720 acces template should we
    // used for access devices in the network'
    string description = 3;

    // template contains the actual template
    string template = 4;

    // the timestamp when the template was first created
    google.protobuf.Timestamp created = 6;
}

message GetByIDParameters {
    // the id of the template to get
    string id = 1;
}


message ListParameters {
    optional string name = 1;

    optional int64 limit = 2;

    optional int64 offset = 3;
}

message CreateParameters {
    // name of the templatem cannot be empty
    string name = 1;

    // description of the template,
    optional string description  = 2;

    // the actual template
    string template = 3;

}

message DeleteParameters {
    // the id of the device configuration to delete
    string id = 1;
}

message ListResponse {
    // the found templates
    repeated Template templates = 1;
}