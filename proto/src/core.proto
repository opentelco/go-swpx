/*
 * Copyright (c) 2020. Liero AB
 *
 * Permission is hereby granted, free of charge, to any person obtaining
 * a copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sublicense,
 * and/or sell copies of the Software, and to permit persons to whom the Software
 * is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
 * IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
 * CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
 * TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE
 * OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */

syntax = "proto3";
package core;
option go_package = "git.liero.se/opentelco/go-swpx/proto/go/core";

import "network_element.proto";

message Error {
    string message = 1;
    int32 code = 2;
}

message Request {
    oneof payload {
        TechnicalInformationRequest technical_information_request = 1;
    }
}

message Response{
    oneof Payload {
        TechnicalInformationResponse technical_information_response = 1;
    }
}

service Core {
    rpc GetTechnicalPortInformation(Request) returns (Response);
}

message TechnicalInformationResponse {
    networkelement.Element network_element = 1;
    string physical_port = 2;
    Error error = 3;
    string RequestObjectID = 4;
}

message TechnicalInformationRequest {
    string hostname = 1;
    string port = 2;
    string provider = 3;
    string driver = 4;
    string region = 5;
    int32 timeout = 6;
    bool recreate_index = 7;
    int32 cache_ttl = 8;
}

