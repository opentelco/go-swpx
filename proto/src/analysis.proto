/*
 * File: analysis.proto
 * Project: src
 * File Created: Sunday, 14th February 2021 1:47:04 pm
 * Author: Mathias Ehrlin (mathias.ehrlin@vx.se)
 * -----
 * Last Modified: Sunday, 14th February 2021 1:56:06 pm
 * Modified By: Mathias Ehrlin (mathias.ehrlin@vx.se>)
 * -----
 * Copyright - 2021 VX Service Delivery AB
 *
 * Unauthorized copying of this file, via any medium is strictly prohibited
 * Proprietary and confidential
 * -----
 */

syntax = "proto3";
package analysis;
option go_package = "go.opentelco.io/go-swpx/proto/go/analysispb";

import "google/protobuf/timestamp.proto";

message Report {
    // the id of the report (workflow id)
    string id = 1;

    // the report is the result of the analysis
    repeated Analysis analysis = 2;

    Status status = 3;
    enum Status {
        STATUS_NOT_SET    = 0;
        STATUS_RUNNING    = 1;
        STATUS_COMPLETED  = 2;
        STATUS_FAILED     = 3;
        STATUS_CANCELED   = 4;
        STATUS_TERMINATED = 5;
    }

    // started is the time when the report was started
    google.protobuf.Timestamp started = 4;

    // completed is the time when the report was completed
    google.protobuf.Timestamp completed = 5;

    // the report is the result of the analysis
    optional string error = 6;

    // type of report, Quick or Detailed
    Type type = 7;

    // the different types of the report
    enum Type {
        // the type is not set
        TYPE_NOT_SET = 0;

        // the type is quick, the analysis is done in a short time aprox 5-10 seconds
        TYPE_QUICK = 1;

        // the type is detailed, the analysis is done in a longer time aprox 40-60 seconds
        TYPE_DETAILED = 2;
    }
}

message Analysis {
    enum Type {
        TYPE_NOT_SET = 0;

        // analysis of the link state on the port
        TYPE_LINK = 1;

        // analysis of the link crc error counter on the port
        // if the port has crc errors during the analysis
        TYPE_LINK_CRC_ERROR = 2;

        // Analysis of the link error counter on the port
        // the number of packets that could not be transmitted because of errors
        TYPE_LINK_ERROR = 3;

        // analysis of the transceiver diagnostics on the port
        // RX/TX power, temperature, voltage, bias current etc.
        // Analyze of the Interface.Transceiver.Stats
        TYPE_TRANSCEIVER_DIAGNOSTICS = 4;

        // analysis of the traffic on the port
        // if the port has traffic during the analysis
        TYPE_TRAFFIC = 5;

        // analysis of the mac address learned by mac learning
        // some devices will inhert the mac address from the dhcp snooping and vice versa
        TYPE_MAC_ADDRESS = 6;

        // analysis of the dhcp snooping lease table
        TYPE_DHCP_LEASE = 7;
    }
    Type type = 1;

    enum Result {
        RESULT_NOT_SET = 0;

        // Something is wrong with the analysed access (switch and port)
        // either the end customer needs to make some changes or a ticket needs to be created
        // before a ticket is created troubleshooting should be done by the end customer
        RESULT_ERROR = 1;

        // Something could be wrong with the analysed access (switch and port) but most likely not
        // the result could indicate a problem but the impact is uncertain or low. Creating a trouble ticket
        // is not recommended based on a Warning result
        RESULT_WARNING = 2;

        // the analysis is ok, no problem found with the analysed access (switch and port)
        RESULT_OK = 3;
    }

    // the result of the analysis, if the analysis is ok, warning or error
    Result result = 2;

    // the note is a short description of the analysis, e.g "link was down through out the analysis"
    string note = 3;

    // the value is the values that was analyzed
    repeated string value = 4;

    // threshold is the value that the value is compared to
    string threshold = 5;

    // what the analysis is about, why we analyse this etc
    string description = 6;
}