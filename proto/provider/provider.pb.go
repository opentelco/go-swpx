//
// Copyright (c) 2020. Liero AB
//
// Permission is hereby granted, free of charge, to any person obtaining
// a copy of this software and associated documentation files (the "Software"),
// to deal in the Software without restriction, including without limitation
// the rights to use, copy, modify, merge, publish, distribute, sublicense,
// and/or sell copies of the Software, and to permit persons to whom the Software
// is furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
// OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
// IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
// CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
// TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE
// OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.6.1
// source: git.liero.se/opentelco/go-swpx/proto/provider/provider.proto

package provider

import (
	context "context"
	dnc "git.liero.se/opentelco/go-swpx/proto/dnc"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_git_liero_se_opentelco_go_swpx_proto_provider_provider_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_git_liero_se_opentelco_go_swpx_proto_provider_provider_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_git_liero_se_opentelco_go_swpx_proto_provider_provider_proto_rawDescGZIP(), []int{0}
}

type NameResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *NameResponse) Reset() {
	*x = NameResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_git_liero_se_opentelco_go_swpx_proto_provider_provider_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NameResponse) ProtoMessage() {}

func (x *NameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_git_liero_se_opentelco_go_swpx_proto_provider_provider_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NameResponse.ProtoReflect.Descriptor instead.
func (*NameResponse) Descriptor() ([]byte, []int) {
	return file_git_liero_se_opentelco_go_swpx_proto_provider_provider_proto_rawDescGZIP(), []int{1}
}

func (x *NameResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type VersionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version string `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *VersionResponse) Reset() {
	*x = VersionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_git_liero_se_opentelco_go_swpx_proto_provider_provider_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VersionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VersionResponse) ProtoMessage() {}

func (x *VersionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_git_liero_se_opentelco_go_swpx_proto_provider_provider_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VersionResponse.ProtoReflect.Descriptor instead.
func (*VersionResponse) Descriptor() ([]byte, []int) {
	return file_git_liero_se_opentelco_go_swpx_proto_provider_provider_proto_rawDescGZIP(), []int{2}
}

func (x *VersionResponse) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

type MatchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OriginId string `protobuf:"bytes,1,opt,name=origin_id,json=originId,proto3" json:"origin_id,omitempty"`
}

func (x *MatchRequest) Reset() {
	*x = MatchRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_git_liero_se_opentelco_go_swpx_proto_provider_provider_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MatchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchRequest) ProtoMessage() {}

func (x *MatchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_git_liero_se_opentelco_go_swpx_proto_provider_provider_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchRequest.ProtoReflect.Descriptor instead.
func (*MatchRequest) Descriptor() ([]byte, []int) {
	return file_git_liero_se_opentelco_go_swpx_proto_provider_provider_proto_rawDescGZIP(), []int{3}
}

func (x *MatchRequest) GetOriginId() string {
	if x != nil {
		return x.OriginId
	}
	return ""
}

type MatchResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Match bool `protobuf:"varint,1,opt,name=match,proto3" json:"match,omitempty"`
}

func (x *MatchResponse) Reset() {
	*x = MatchResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_git_liero_se_opentelco_go_swpx_proto_provider_provider_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MatchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchResponse) ProtoMessage() {}

func (x *MatchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_git_liero_se_opentelco_go_swpx_proto_provider_provider_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchResponse.ProtoReflect.Descriptor instead.
func (*MatchResponse) Descriptor() ([]byte, []int) {
	return file_git_liero_se_opentelco_go_swpx_proto_provider_provider_proto_rawDescGZIP(), []int{4}
}

func (x *MatchResponse) GetMatch() bool {
	if x != nil {
		return x.Match
	}
	return false
}

type WeightResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Weight int64 `protobuf:"varint,1,opt,name=weight,proto3" json:"weight,omitempty"`
}

func (x *WeightResponse) Reset() {
	*x = WeightResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_git_liero_se_opentelco_go_swpx_proto_provider_provider_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WeightResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WeightResponse) ProtoMessage() {}

func (x *WeightResponse) ProtoReflect() protoreflect.Message {
	mi := &file_git_liero_se_opentelco_go_swpx_proto_provider_provider_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WeightResponse.ProtoReflect.Descriptor instead.
func (*WeightResponse) Descriptor() ([]byte, []int) {
	return file_git_liero_se_opentelco_go_swpx_proto_provider_provider_proto_rawDescGZIP(), []int{5}
}

func (x *WeightResponse) GetWeight() int64 {
	if x != nil {
		return x.Weight
	}
	return 0
}

type ConfigTelnet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User                string `protobuf:"bytes,1,opt,name=User,proto3" json:"User,omitempty"`
	Password            string `protobuf:"bytes,2,opt,name=Password,proto3" json:"Password,omitempty"`
	Port                int32  `protobuf:"varint,3,opt,name=Port,proto3" json:"Port,omitempty"`
	ScreenLength        string `protobuf:"bytes,4,opt,name=ScreenLength,proto3" json:"ScreenLength,omitempty"`
	ScreenLengthCommand string `protobuf:"bytes,5,opt,name=ScreenLengthCommand,proto3" json:"ScreenLengthCommand,omitempty"`
	RegexPrompt         string `protobuf:"bytes,6,opt,name=RegexPrompt,proto3" json:"RegexPrompt,omitempty"`
	Errors              string `protobuf:"bytes,7,opt,name=Errors,proto3" json:"Errors,omitempty"`
	TTL                 uint64 `protobuf:"varint,8,opt,name=TTL,proto3" json:"TTL,omitempty"`
	ReadDeadLine        uint64 `protobuf:"varint,9,opt,name=ReadDeadLine,proto3" json:"ReadDeadLine,omitempty"`
	WriteDeadLine       uint64 `protobuf:"varint,10,opt,name=WriteDeadLine,proto3" json:"WriteDeadLine,omitempty"`
}

func (x *ConfigTelnet) Reset() {
	*x = ConfigTelnet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_git_liero_se_opentelco_go_swpx_proto_provider_provider_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigTelnet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigTelnet) ProtoMessage() {}

func (x *ConfigTelnet) ProtoReflect() protoreflect.Message {
	mi := &file_git_liero_se_opentelco_go_swpx_proto_provider_provider_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigTelnet.ProtoReflect.Descriptor instead.
func (*ConfigTelnet) Descriptor() ([]byte, []int) {
	return file_git_liero_se_opentelco_go_swpx_proto_provider_provider_proto_rawDescGZIP(), []int{6}
}

func (x *ConfigTelnet) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *ConfigTelnet) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *ConfigTelnet) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *ConfigTelnet) GetScreenLength() string {
	if x != nil {
		return x.ScreenLength
	}
	return ""
}

func (x *ConfigTelnet) GetScreenLengthCommand() string {
	if x != nil {
		return x.ScreenLengthCommand
	}
	return ""
}

func (x *ConfigTelnet) GetRegexPrompt() string {
	if x != nil {
		return x.RegexPrompt
	}
	return ""
}

func (x *ConfigTelnet) GetErrors() string {
	if x != nil {
		return x.Errors
	}
	return ""
}

func (x *ConfigTelnet) GetTTL() uint64 {
	if x != nil {
		return x.TTL
	}
	return 0
}

func (x *ConfigTelnet) GetReadDeadLine() uint64 {
	if x != nil {
		return x.ReadDeadLine
	}
	return 0
}

func (x *ConfigTelnet) GetWriteDeadLine() uint64 {
	if x != nil {
		return x.WriteDeadLine
	}
	return 0
}

type ConfigSNMP struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Community          string `protobuf:"bytes,1,opt,name=Community,proto3" json:"Community,omitempty"`
	Version            uint32 `protobuf:"varint,2,opt,name=Version,proto3" json:"Version,omitempty"`
	Port               uint32 `protobuf:"varint,3,opt,name=Port,proto3" json:"Port,omitempty"`
	Timeout            uint64 `protobuf:"varint,4,opt,name=Timeout,proto3" json:"Timeout,omitempty"`
	Retries            int32  `protobuf:"varint,5,opt,name=Retries,proto3" json:"Retries,omitempty"`
	MaxIterations      int32  `protobuf:"varint,6,opt,name=MaxIterations,proto3" json:"MaxIterations,omitempty"`
	MaxRepetitions     int32  `protobuf:"varint,7,opt,name=MaxRepetitions,proto3" json:"MaxRepetitions,omitempty"`
	NonRepeaters       int32  `protobuf:"varint,8,opt,name=NonRepeaters,proto3" json:"NonRepeaters,omitempty"`
	DynamicRepetitions bool   `protobuf:"varint,9,opt,name=DynamicRepetitions,proto3" json:"DynamicRepetitions,omitempty"`
}

func (x *ConfigSNMP) Reset() {
	*x = ConfigSNMP{}
	if protoimpl.UnsafeEnabled {
		mi := &file_git_liero_se_opentelco_go_swpx_proto_provider_provider_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigSNMP) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigSNMP) ProtoMessage() {}

func (x *ConfigSNMP) ProtoReflect() protoreflect.Message {
	mi := &file_git_liero_se_opentelco_go_swpx_proto_provider_provider_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigSNMP.ProtoReflect.Descriptor instead.
func (*ConfigSNMP) Descriptor() ([]byte, []int) {
	return file_git_liero_se_opentelco_go_swpx_proto_provider_provider_proto_rawDescGZIP(), []int{7}
}

func (x *ConfigSNMP) GetCommunity() string {
	if x != nil {
		return x.Community
	}
	return ""
}

func (x *ConfigSNMP) GetVersion() uint32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *ConfigSNMP) GetPort() uint32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *ConfigSNMP) GetTimeout() uint64 {
	if x != nil {
		return x.Timeout
	}
	return 0
}

func (x *ConfigSNMP) GetRetries() int32 {
	if x != nil {
		return x.Retries
	}
	return 0
}

func (x *ConfigSNMP) GetMaxIterations() int32 {
	if x != nil {
		return x.MaxIterations
	}
	return 0
}

func (x *ConfigSNMP) GetMaxRepetitions() int32 {
	if x != nil {
		return x.MaxRepetitions
	}
	return 0
}

func (x *ConfigSNMP) GetNonRepeaters() int32 {
	if x != nil {
		return x.NonRepeaters
	}
	return 0
}

func (x *ConfigSNMP) GetDynamicRepetitions() bool {
	if x != nil {
		return x.DynamicRepetitions
	}
	return false
}

type Configuration struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SNMP   *ConfigSNMP   `protobuf:"bytes,1,opt,name=SNMP,proto3" json:"SNMP,omitempty"`
	Telnet *ConfigTelnet `protobuf:"bytes,2,opt,name=Telnet,proto3" json:"Telnet,omitempty"`
}

func (x *Configuration) Reset() {
	*x = Configuration{}
	if protoimpl.UnsafeEnabled {
		mi := &file_git_liero_se_opentelco_go_swpx_proto_provider_provider_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Configuration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Configuration) ProtoMessage() {}

func (x *Configuration) ProtoReflect() protoreflect.Message {
	mi := &file_git_liero_se_opentelco_go_swpx_proto_provider_provider_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Configuration.ProtoReflect.Descriptor instead.
func (*Configuration) Descriptor() ([]byte, []int) {
	return file_git_liero_se_opentelco_go_swpx_proto_provider_provider_proto_rawDescGZIP(), []int{8}
}

func (x *Configuration) GetSNMP() *ConfigSNMP {
	if x != nil {
		return x.SNMP
	}
	return nil
}

func (x *Configuration) GetTelnet() *ConfigTelnet {
	if x != nil {
		return x.Telnet
	}
	return nil
}

var File_git_liero_se_opentelco_go_swpx_proto_provider_provider_proto protoreflect.FileDescriptor

var file_git_liero_se_opentelco_go_swpx_proto_provider_provider_proto_rawDesc = []byte{
	0x0a, 0x3c, 0x67, 0x69, 0x74, 0x2e, 0x6c, 0x69, 0x65, 0x72, 0x6f, 0x2e, 0x73, 0x65, 0x2f, 0x6f,
	0x70, 0x65, 0x6e, 0x74, 0x65, 0x6c, 0x63, 0x6f, 0x2f, 0x67, 0x6f, 0x2d, 0x73, 0x77, 0x70, 0x78,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2f,
	0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08,
	0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x1a, 0x0d, 0x64, 0x6e, 0x63, 0x2f, 0x64, 0x6e,
	0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x07, 0x0a, 0x05, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x22, 0x22, 0x0a, 0x0c, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x22, 0x2b, 0x0a, 0x0f, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x22, 0x2b, 0x0a, 0x0c, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1b, 0x0a, 0x09, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x49, 0x64, 0x22, 0x25,
	0x0a, 0x0d, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05,
	0x6d, 0x61, 0x74, 0x63, 0x68, 0x22, 0x28, 0x0a, 0x0e, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x22,
	0xbe, 0x02, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x54, 0x65, 0x6c, 0x6e, 0x65, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x55, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x55, 0x73, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x50, 0x6f, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x50, 0x6f, 0x72, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x4c, 0x65,
	0x6e, 0x67, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x53, 0x63, 0x72, 0x65,
	0x65, 0x6e, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x30, 0x0a, 0x13, 0x53, 0x63, 0x72, 0x65,
	0x65, 0x6e, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x4c, 0x65, 0x6e,
	0x67, 0x74, 0x68, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x52, 0x65,
	0x67, 0x65, 0x78, 0x50, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x52, 0x65, 0x67, 0x65, 0x78, 0x50, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x54, 0x54, 0x4c, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x03, 0x54, 0x54, 0x4c, 0x12, 0x22, 0x0a, 0x0c, 0x52, 0x65, 0x61, 0x64, 0x44, 0x65,
	0x61, 0x64, 0x4c, 0x69, 0x6e, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x52, 0x65,
	0x61, 0x64, 0x44, 0x65, 0x61, 0x64, 0x4c, 0x69, 0x6e, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x57, 0x72,
	0x69, 0x74, 0x65, 0x44, 0x65, 0x61, 0x64, 0x4c, 0x69, 0x6e, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0d, 0x57, 0x72, 0x69, 0x74, 0x65, 0x44, 0x65, 0x61, 0x64, 0x4c, 0x69, 0x6e, 0x65,
	0x22, 0xae, 0x02, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x4e, 0x4d, 0x50, 0x12,
	0x1c, 0x0a, 0x09, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x12, 0x18, 0x0a,
	0x07, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x50, 0x6f, 0x72, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x54,
	0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x54, 0x69,
	0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x73,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x73, 0x12,
	0x24, 0x0a, 0x0d, 0x4d, 0x61, 0x78, 0x49, 0x74, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x4d, 0x61, 0x78, 0x49, 0x74, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x4d, 0x61, 0x78, 0x52, 0x65, 0x70, 0x65,
	0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x4d,
	0x61, 0x78, 0x52, 0x65, 0x70, 0x65, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x22, 0x0a,
	0x0c, 0x4e, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x72, 0x73, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0c, 0x4e, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x72,
	0x73, 0x12, 0x2e, 0x0a, 0x12, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x52, 0x65, 0x70, 0x65,
	0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x44,
	0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x52, 0x65, 0x70, 0x65, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x22, 0x69, 0x0a, 0x0d, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x28, 0x0a, 0x04, 0x53, 0x4e, 0x4d, 0x50, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x53, 0x4e, 0x4d, 0x50, 0x52, 0x04, 0x53, 0x4e, 0x4d, 0x50, 0x12, 0x2e, 0x0a, 0x06,
	0x54, 0x65, 0x6c, 0x6e, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x54, 0x65,
	0x6c, 0x6e, 0x65, 0x74, 0x52, 0x06, 0x54, 0x65, 0x6c, 0x6e, 0x65, 0x74, 0x32, 0xd2, 0x02, 0x0a,
	0x08, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x2f, 0x0a, 0x04, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x1a, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x4e, 0x61,
	0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x07, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,
	0x72, 0x2e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x38, 0x0a, 0x05, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x12, 0x16, 0x2e, 0x70, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x4d, 0x61,
	0x74, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x06, 0x4c,
	0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x12, 0x12, 0x2e, 0x64, 0x6e, 0x63, 0x2e, 0x4c, 0x6f, 0x6f, 0x6b,
	0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x64, 0x6e, 0x63, 0x2e,
	0x4c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33,
	0x0a, 0x06, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x2e, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x42, 0x2f, 0x5a, 0x2d, 0x67, 0x69, 0x74, 0x2e, 0x6c, 0x69, 0x65, 0x72, 0x6f, 0x2e, 0x73,
	0x65, 0x2f, 0x6f, 0x70, 0x65, 0x6e, 0x74, 0x65, 0x6c, 0x63, 0x6f, 0x2f, 0x67, 0x6f, 0x2d, 0x73,
	0x77, 0x70, 0x78, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_git_liero_se_opentelco_go_swpx_proto_provider_provider_proto_rawDescOnce sync.Once
	file_git_liero_se_opentelco_go_swpx_proto_provider_provider_proto_rawDescData = file_git_liero_se_opentelco_go_swpx_proto_provider_provider_proto_rawDesc
)

func file_git_liero_se_opentelco_go_swpx_proto_provider_provider_proto_rawDescGZIP() []byte {
	file_git_liero_se_opentelco_go_swpx_proto_provider_provider_proto_rawDescOnce.Do(func() {
		file_git_liero_se_opentelco_go_swpx_proto_provider_provider_proto_rawDescData = protoimpl.X.CompressGZIP(file_git_liero_se_opentelco_go_swpx_proto_provider_provider_proto_rawDescData)
	})
	return file_git_liero_se_opentelco_go_swpx_proto_provider_provider_proto_rawDescData
}

var file_git_liero_se_opentelco_go_swpx_proto_provider_provider_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_git_liero_se_opentelco_go_swpx_proto_provider_provider_proto_goTypes = []interface{}{
	(*Empty)(nil),              // 0: provider.Empty
	(*NameResponse)(nil),       // 1: provider.NameResponse
	(*VersionResponse)(nil),    // 2: provider.VersionResponse
	(*MatchRequest)(nil),       // 3: provider.MatchRequest
	(*MatchResponse)(nil),      // 4: provider.MatchResponse
	(*WeightResponse)(nil),     // 5: provider.WeightResponse
	(*ConfigTelnet)(nil),       // 6: provider.configTelnet
	(*ConfigSNMP)(nil),         // 7: provider.configSNMP
	(*Configuration)(nil),      // 8: provider.Configuration
	(*dnc.LookupRequest)(nil),  // 9: dnc.LookupRequest
	(*dnc.LookupResponse)(nil), // 10: dnc.LookupResponse
}
var file_git_liero_se_opentelco_go_swpx_proto_provider_provider_proto_depIdxs = []int32{
	7,  // 0: provider.Configuration.SNMP:type_name -> provider.configSNMP
	6,  // 1: provider.Configuration.Telnet:type_name -> provider.configTelnet
	0,  // 2: provider.Provider.Name:input_type -> provider.Empty
	0,  // 3: provider.Provider.Version:input_type -> provider.Empty
	3,  // 4: provider.Provider.Match:input_type -> provider.MatchRequest
	9,  // 5: provider.Provider.Lookup:input_type -> dnc.LookupRequest
	0,  // 6: provider.Provider.Weight:input_type -> provider.Empty
	0,  // 7: provider.Provider.GetConfiguration:input_type -> provider.Empty
	1,  // 8: provider.Provider.Name:output_type -> provider.NameResponse
	2,  // 9: provider.Provider.Version:output_type -> provider.VersionResponse
	4,  // 10: provider.Provider.Match:output_type -> provider.MatchResponse
	10, // 11: provider.Provider.Lookup:output_type -> dnc.LookupResponse
	5,  // 12: provider.Provider.Weight:output_type -> provider.WeightResponse
	8,  // 13: provider.Provider.GetConfiguration:output_type -> provider.Configuration
	8,  // [8:14] is the sub-list for method output_type
	2,  // [2:8] is the sub-list for method input_type
	2,  // [2:2] is the sub-list for extension type_name
	2,  // [2:2] is the sub-list for extension extendee
	0,  // [0:2] is the sub-list for field type_name
}

func init() { file_git_liero_se_opentelco_go_swpx_proto_provider_provider_proto_init() }
func file_git_liero_se_opentelco_go_swpx_proto_provider_provider_proto_init() {
	if File_git_liero_se_opentelco_go_swpx_proto_provider_provider_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_git_liero_se_opentelco_go_swpx_proto_provider_provider_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_git_liero_se_opentelco_go_swpx_proto_provider_provider_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NameResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_git_liero_se_opentelco_go_swpx_proto_provider_provider_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VersionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_git_liero_se_opentelco_go_swpx_proto_provider_provider_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MatchRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_git_liero_se_opentelco_go_swpx_proto_provider_provider_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MatchResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_git_liero_se_opentelco_go_swpx_proto_provider_provider_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WeightResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_git_liero_se_opentelco_go_swpx_proto_provider_provider_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigTelnet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_git_liero_se_opentelco_go_swpx_proto_provider_provider_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigSNMP); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_git_liero_se_opentelco_go_swpx_proto_provider_provider_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Configuration); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_git_liero_se_opentelco_go_swpx_proto_provider_provider_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_git_liero_se_opentelco_go_swpx_proto_provider_provider_proto_goTypes,
		DependencyIndexes: file_git_liero_se_opentelco_go_swpx_proto_provider_provider_proto_depIdxs,
		MessageInfos:      file_git_liero_se_opentelco_go_swpx_proto_provider_provider_proto_msgTypes,
	}.Build()
	File_git_liero_se_opentelco_go_swpx_proto_provider_provider_proto = out.File
	file_git_liero_se_opentelco_go_swpx_proto_provider_provider_proto_rawDesc = nil
	file_git_liero_se_opentelco_go_swpx_proto_provider_provider_proto_goTypes = nil
	file_git_liero_se_opentelco_go_swpx_proto_provider_provider_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ProviderClient is the client API for Provider service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ProviderClient interface {
	Name(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*NameResponse, error)
	Version(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*VersionResponse, error)
	Match(ctx context.Context, in *MatchRequest, opts ...grpc.CallOption) (*MatchResponse, error)
	Lookup(ctx context.Context, in *dnc.LookupRequest, opts ...grpc.CallOption) (*dnc.LookupResponse, error)
	Weight(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*WeightResponse, error)
	GetConfiguration(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Configuration, error)
}

type providerClient struct {
	cc grpc.ClientConnInterface
}

func NewProviderClient(cc grpc.ClientConnInterface) ProviderClient {
	return &providerClient{cc}
}

func (c *providerClient) Name(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*NameResponse, error) {
	out := new(NameResponse)
	err := c.cc.Invoke(ctx, "/provider.Provider/Name", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *providerClient) Version(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*VersionResponse, error) {
	out := new(VersionResponse)
	err := c.cc.Invoke(ctx, "/provider.Provider/Version", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *providerClient) Match(ctx context.Context, in *MatchRequest, opts ...grpc.CallOption) (*MatchResponse, error) {
	out := new(MatchResponse)
	err := c.cc.Invoke(ctx, "/provider.Provider/Match", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *providerClient) Lookup(ctx context.Context, in *dnc.LookupRequest, opts ...grpc.CallOption) (*dnc.LookupResponse, error) {
	out := new(dnc.LookupResponse)
	err := c.cc.Invoke(ctx, "/provider.Provider/Lookup", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *providerClient) Weight(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*WeightResponse, error) {
	out := new(WeightResponse)
	err := c.cc.Invoke(ctx, "/provider.Provider/Weight", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *providerClient) GetConfiguration(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Configuration, error) {
	out := new(Configuration)
	err := c.cc.Invoke(ctx, "/provider.Provider/GetConfiguration", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ProviderServer is the server API for Provider service.
type ProviderServer interface {
	Name(context.Context, *Empty) (*NameResponse, error)
	Version(context.Context, *Empty) (*VersionResponse, error)
	Match(context.Context, *MatchRequest) (*MatchResponse, error)
	Lookup(context.Context, *dnc.LookupRequest) (*dnc.LookupResponse, error)
	Weight(context.Context, *Empty) (*WeightResponse, error)
	GetConfiguration(context.Context, *Empty) (*Configuration, error)
}

// UnimplementedProviderServer can be embedded to have forward compatible implementations.
type UnimplementedProviderServer struct {
}

func (*UnimplementedProviderServer) Name(context.Context, *Empty) (*NameResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Name not implemented")
}
func (*UnimplementedProviderServer) Version(context.Context, *Empty) (*VersionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Version not implemented")
}
func (*UnimplementedProviderServer) Match(context.Context, *MatchRequest) (*MatchResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Match not implemented")
}
func (*UnimplementedProviderServer) Lookup(context.Context, *dnc.LookupRequest) (*dnc.LookupResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Lookup not implemented")
}
func (*UnimplementedProviderServer) Weight(context.Context, *Empty) (*WeightResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Weight not implemented")
}
func (*UnimplementedProviderServer) GetConfiguration(context.Context, *Empty) (*Configuration, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetConfiguration not implemented")
}

func RegisterProviderServer(s *grpc.Server, srv ProviderServer) {
	s.RegisterService(&_Provider_serviceDesc, srv)
}

func _Provider_Name_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProviderServer).Name(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/provider.Provider/Name",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProviderServer).Name(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Provider_Version_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProviderServer).Version(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/provider.Provider/Version",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProviderServer).Version(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Provider_Match_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MatchRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProviderServer).Match(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/provider.Provider/Match",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProviderServer).Match(ctx, req.(*MatchRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Provider_Lookup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(dnc.LookupRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProviderServer).Lookup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/provider.Provider/Lookup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProviderServer).Lookup(ctx, req.(*dnc.LookupRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Provider_Weight_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProviderServer).Weight(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/provider.Provider/Weight",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProviderServer).Weight(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Provider_GetConfiguration_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProviderServer).GetConfiguration(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/provider.Provider/GetConfiguration",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProviderServer).GetConfiguration(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _Provider_serviceDesc = grpc.ServiceDesc{
	ServiceName: "provider.Provider",
	HandlerType: (*ProviderServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Name",
			Handler:    _Provider_Name_Handler,
		},
		{
			MethodName: "Version",
			Handler:    _Provider_Version_Handler,
		},
		{
			MethodName: "Match",
			Handler:    _Provider_Match_Handler,
		},
		{
			MethodName: "Lookup",
			Handler:    _Provider_Lookup_Handler,
		},
		{
			MethodName: "Weight",
			Handler:    _Provider_Weight_Handler,
		},
		{
			MethodName: "GetConfiguration",
			Handler:    _Provider_GetConfiguration_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "git.liero.se/opentelco/go-swpx/proto/provider/provider.proto",
}
