// Code generated by protoc-gen-go. DO NOT EDIT.
// source: git.liero.se/opentelco/go-swpx/proto/provider/provider.proto

package provider

import (
	context "context"
	fmt "fmt"
	dnc "git.liero.se/opentelco/go-swpx/proto/dnc"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Empty struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Empty) Reset()         { *m = Empty{} }
func (m *Empty) String() string { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()    {}
func (*Empty) Descriptor() ([]byte, []int) {
	return fileDescriptor_c90e022f12f82725, []int{0}
}

func (m *Empty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Empty.Unmarshal(m, b)
}
func (m *Empty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Empty.Marshal(b, m, deterministic)
}
func (m *Empty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Empty.Merge(m, src)
}
func (m *Empty) XXX_Size() int {
	return xxx_messageInfo_Empty.Size(m)
}
func (m *Empty) XXX_DiscardUnknown() {
	xxx_messageInfo_Empty.DiscardUnknown(m)
}

var xxx_messageInfo_Empty proto.InternalMessageInfo

type NameResponse struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NameResponse) Reset()         { *m = NameResponse{} }
func (m *NameResponse) String() string { return proto.CompactTextString(m) }
func (*NameResponse) ProtoMessage()    {}
func (*NameResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c90e022f12f82725, []int{1}
}

func (m *NameResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NameResponse.Unmarshal(m, b)
}
func (m *NameResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NameResponse.Marshal(b, m, deterministic)
}
func (m *NameResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NameResponse.Merge(m, src)
}
func (m *NameResponse) XXX_Size() int {
	return xxx_messageInfo_NameResponse.Size(m)
}
func (m *NameResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_NameResponse.DiscardUnknown(m)
}

var xxx_messageInfo_NameResponse proto.InternalMessageInfo

func (m *NameResponse) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type VersionResponse struct {
	Version              string   `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VersionResponse) Reset()         { *m = VersionResponse{} }
func (m *VersionResponse) String() string { return proto.CompactTextString(m) }
func (*VersionResponse) ProtoMessage()    {}
func (*VersionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c90e022f12f82725, []int{2}
}

func (m *VersionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VersionResponse.Unmarshal(m, b)
}
func (m *VersionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VersionResponse.Marshal(b, m, deterministic)
}
func (m *VersionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VersionResponse.Merge(m, src)
}
func (m *VersionResponse) XXX_Size() int {
	return xxx_messageInfo_VersionResponse.Size(m)
}
func (m *VersionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_VersionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_VersionResponse proto.InternalMessageInfo

func (m *VersionResponse) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

type MatchRequest struct {
	OriginId             string   `protobuf:"bytes,1,opt,name=origin_id,json=originId,proto3" json:"origin_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MatchRequest) Reset()         { *m = MatchRequest{} }
func (m *MatchRequest) String() string { return proto.CompactTextString(m) }
func (*MatchRequest) ProtoMessage()    {}
func (*MatchRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c90e022f12f82725, []int{3}
}

func (m *MatchRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MatchRequest.Unmarshal(m, b)
}
func (m *MatchRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MatchRequest.Marshal(b, m, deterministic)
}
func (m *MatchRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MatchRequest.Merge(m, src)
}
func (m *MatchRequest) XXX_Size() int {
	return xxx_messageInfo_MatchRequest.Size(m)
}
func (m *MatchRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MatchRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MatchRequest proto.InternalMessageInfo

func (m *MatchRequest) GetOriginId() string {
	if m != nil {
		return m.OriginId
	}
	return ""
}

type MatchResponse struct {
	Match                bool     `protobuf:"varint,1,opt,name=match,proto3" json:"match,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MatchResponse) Reset()         { *m = MatchResponse{} }
func (m *MatchResponse) String() string { return proto.CompactTextString(m) }
func (*MatchResponse) ProtoMessage()    {}
func (*MatchResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c90e022f12f82725, []int{4}
}

func (m *MatchResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MatchResponse.Unmarshal(m, b)
}
func (m *MatchResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MatchResponse.Marshal(b, m, deterministic)
}
func (m *MatchResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MatchResponse.Merge(m, src)
}
func (m *MatchResponse) XXX_Size() int {
	return xxx_messageInfo_MatchResponse.Size(m)
}
func (m *MatchResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MatchResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MatchResponse proto.InternalMessageInfo

func (m *MatchResponse) GetMatch() bool {
	if m != nil {
		return m.Match
	}
	return false
}

type WeightResponse struct {
	Weight               int64    `protobuf:"varint,1,opt,name=weight,proto3" json:"weight,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WeightResponse) Reset()         { *m = WeightResponse{} }
func (m *WeightResponse) String() string { return proto.CompactTextString(m) }
func (*WeightResponse) ProtoMessage()    {}
func (*WeightResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c90e022f12f82725, []int{5}
}

func (m *WeightResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WeightResponse.Unmarshal(m, b)
}
func (m *WeightResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WeightResponse.Marshal(b, m, deterministic)
}
func (m *WeightResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WeightResponse.Merge(m, src)
}
func (m *WeightResponse) XXX_Size() int {
	return xxx_messageInfo_WeightResponse.Size(m)
}
func (m *WeightResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_WeightResponse.DiscardUnknown(m)
}

var xxx_messageInfo_WeightResponse proto.InternalMessageInfo

func (m *WeightResponse) GetWeight() int64 {
	if m != nil {
		return m.Weight
	}
	return 0
}

func init() {
	proto.RegisterType((*Empty)(nil), "provider.Empty")
	proto.RegisterType((*NameResponse)(nil), "provider.NameResponse")
	proto.RegisterType((*VersionResponse)(nil), "provider.VersionResponse")
	proto.RegisterType((*MatchRequest)(nil), "provider.MatchRequest")
	proto.RegisterType((*MatchResponse)(nil), "provider.MatchResponse")
	proto.RegisterType((*WeightResponse)(nil), "provider.WeightResponse")
}

func init() {
	proto.RegisterFile("git.liero.se/opentelco/go-swpx/proto/provider/provider.proto", fileDescriptor_c90e022f12f82725)
}

var fileDescriptor_c90e022f12f82725 = []byte{
	// 329 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x92, 0x41, 0x4b, 0xfb, 0x30,
	0x18, 0xc6, 0xd9, 0xff, 0xbf, 0x75, 0xdd, 0xcb, 0xe6, 0x20, 0xca, 0x9c, 0xf3, 0x22, 0x01, 0x61,
	0x30, 0xd6, 0xa2, 0x43, 0xf0, 0xe0, 0x49, 0xf0, 0x20, 0xa8, 0x48, 0x0f, 0x0a, 0x5e, 0x64, 0xb6,
	0x2f, 0x5d, 0x70, 0x4d, 0x62, 0x93, 0x6d, 0xfa, 0x3d, 0xfc, 0xc0, 0xd2, 0x24, 0xeb, 0x36, 0x7b,
	0xf2, 0x52, 0xf2, 0xfc, 0xfa, 0xbc, 0x2f, 0x7d, 0x9e, 0x06, 0xae, 0x52, 0xa6, 0x83, 0x39, 0xc3,
	0x5c, 0x04, 0x0a, 0x43, 0x21, 0x91, 0x6b, 0x9c, 0xc7, 0x22, 0x4c, 0xc5, 0x58, 0xad, 0xe4, 0x67,
	0x28, 0x73, 0xa1, 0x45, 0xf1, 0x5c, 0xb2, 0x04, 0xf3, 0xf2, 0x10, 0x18, 0x4e, 0xfc, 0xb5, 0x1e,
	0x74, 0x12, 0x1e, 0x87, 0x09, 0x8f, 0xed, 0x0b, 0xda, 0x84, 0xc6, 0x4d, 0x26, 0xf5, 0x17, 0xa5,
	0xd0, 0x7e, 0x98, 0x66, 0x18, 0xa1, 0x92, 0x82, 0x2b, 0x24, 0x04, 0xea, 0x7c, 0x9a, 0x61, 0xbf,
	0x76, 0x52, 0x1b, 0xb6, 0x22, 0x73, 0xa6, 0x23, 0xe8, 0x3e, 0x61, 0xae, 0x98, 0xe0, 0xa5, 0xad,
	0x0f, 0xcd, 0xa5, 0x45, 0xce, 0xb9, 0x96, 0x74, 0x04, 0xed, 0xfb, 0xa9, 0x8e, 0x67, 0x11, 0x7e,
	0x2c, 0x50, 0x69, 0x72, 0x0c, 0x2d, 0x91, 0xb3, 0x94, 0xf1, 0x57, 0x96, 0x38, 0xaf, 0x6f, 0xc1,
	0x6d, 0x42, 0x4f, 0xa1, 0xe3, 0xcc, 0x6e, 0xef, 0x01, 0x34, 0xb2, 0x02, 0x18, 0xa7, 0x1f, 0x59,
	0x41, 0x87, 0xb0, 0xf7, 0x8c, 0x2c, 0x9d, 0xe9, 0xd2, 0xd7, 0x03, 0x6f, 0x65, 0x88, 0x31, 0xfe,
	0x8f, 0x9c, 0x3a, 0xff, 0xfe, 0x07, 0xfe, 0xa3, 0xcb, 0x4c, 0x42, 0xa8, 0x17, 0xd9, 0x48, 0x37,
	0x28, 0x6b, 0x31, 0xa1, 0x07, 0xbd, 0x0d, 0xd8, 0x09, 0x7f, 0x01, 0x4d, 0x17, 0xb4, 0x3a, 0x73,
	0xb4, 0x01, 0xbf, 0xcb, 0xb8, 0x84, 0x86, 0x49, 0x41, 0xb6, 0xf6, 0x6e, 0x77, 0x30, 0x38, 0xac,
	0x70, 0x37, 0x79, 0x06, 0xde, 0x9d, 0x10, 0xef, 0x0b, 0x49, 0x48, 0x50, 0xfc, 0x1c, 0x2b, 0xd6,
	0x63, 0xfb, 0x3b, 0xcc, 0x8d, 0x4c, 0xc0, 0xb3, 0x5d, 0x54, 0x3f, 0xb1, 0xbf, 0x01, 0xbb, 0x75,
	0x5d, 0x87, 0x2f, 0xe3, 0x3f, 0xdd, 0xa3, 0x37, 0xcf, 0xe8, 0xc9, 0x4f, 0x00, 0x00, 0x00, 0xff,
	0xff, 0x02, 0x68, 0xeb, 0x78, 0x7f, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ProviderClient is the client API for Provider service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ProviderClient interface {
	Name(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*NameResponse, error)
	Version(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*VersionResponse, error)
	Match(ctx context.Context, in *MatchRequest, opts ...grpc.CallOption) (*MatchResponse, error)
	Lookup(ctx context.Context, in *dnc.LookupRequest, opts ...grpc.CallOption) (*dnc.LookupResponse, error)
	Weight(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*WeightResponse, error)
}

type providerClient struct {
	cc grpc.ClientConnInterface
}

func NewProviderClient(cc grpc.ClientConnInterface) ProviderClient {
	return &providerClient{cc}
}

func (c *providerClient) Name(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*NameResponse, error) {
	out := new(NameResponse)
	err := c.cc.Invoke(ctx, "/provider.Provider/Name", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *providerClient) Version(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*VersionResponse, error) {
	out := new(VersionResponse)
	err := c.cc.Invoke(ctx, "/provider.Provider/Version", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *providerClient) Match(ctx context.Context, in *MatchRequest, opts ...grpc.CallOption) (*MatchResponse, error) {
	out := new(MatchResponse)
	err := c.cc.Invoke(ctx, "/provider.Provider/Match", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *providerClient) Lookup(ctx context.Context, in *dnc.LookupRequest, opts ...grpc.CallOption) (*dnc.LookupResponse, error) {
	out := new(dnc.LookupResponse)
	err := c.cc.Invoke(ctx, "/provider.Provider/Lookup", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *providerClient) Weight(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*WeightResponse, error) {
	out := new(WeightResponse)
	err := c.cc.Invoke(ctx, "/provider.Provider/Weight", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ProviderServer is the server API for Provider service.
type ProviderServer interface {
	Name(context.Context, *Empty) (*NameResponse, error)
	Version(context.Context, *Empty) (*VersionResponse, error)
	Match(context.Context, *MatchRequest) (*MatchResponse, error)
	Lookup(context.Context, *dnc.LookupRequest) (*dnc.LookupResponse, error)
	Weight(context.Context, *Empty) (*WeightResponse, error)
}

// UnimplementedProviderServer can be embedded to have forward compatible implementations.
type UnimplementedProviderServer struct {
}

func (*UnimplementedProviderServer) Name(ctx context.Context, req *Empty) (*NameResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Name not implemented")
}
func (*UnimplementedProviderServer) Version(ctx context.Context, req *Empty) (*VersionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Version not implemented")
}
func (*UnimplementedProviderServer) Match(ctx context.Context, req *MatchRequest) (*MatchResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Match not implemented")
}
func (*UnimplementedProviderServer) Lookup(ctx context.Context, req *dnc.LookupRequest) (*dnc.LookupResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Lookup not implemented")
}
func (*UnimplementedProviderServer) Weight(ctx context.Context, req *Empty) (*WeightResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Weight not implemented")
}

func RegisterProviderServer(s *grpc.Server, srv ProviderServer) {
	s.RegisterService(&_Provider_serviceDesc, srv)
}

func _Provider_Name_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProviderServer).Name(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/provider.Provider/Name",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProviderServer).Name(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Provider_Version_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProviderServer).Version(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/provider.Provider/Version",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProviderServer).Version(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Provider_Match_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MatchRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProviderServer).Match(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/provider.Provider/Match",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProviderServer).Match(ctx, req.(*MatchRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Provider_Lookup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(dnc.LookupRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProviderServer).Lookup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/provider.Provider/Lookup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProviderServer).Lookup(ctx, req.(*dnc.LookupRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Provider_Weight_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProviderServer).Weight(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/provider.Provider/Weight",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProviderServer).Weight(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _Provider_serviceDesc = grpc.ServiceDesc{
	ServiceName: "provider.Provider",
	HandlerType: (*ProviderServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Name",
			Handler:    _Provider_Name_Handler,
		},
		{
			MethodName: "Version",
			Handler:    _Provider_Version_Handler,
		},
		{
			MethodName: "Match",
			Handler:    _Provider_Match_Handler,
		},
		{
			MethodName: "Lookup",
			Handler:    _Provider_Lookup_Handler,
		},
		{
			MethodName: "Weight",
			Handler:    _Provider_Weight_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "git.liero.se/opentelco/go-swpx/proto/provider/provider.proto",
}
